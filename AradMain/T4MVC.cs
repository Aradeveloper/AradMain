// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static AradMain.Controllers.ErrorController Error = new AradMain.Controllers.T4MVC_ErrorController();
    public static AradMain.Controllers.HomeController Home = new AradMain.Controllers.T4MVC_HomeController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
    public static T4MVC.ThemesController Themes = new T4MVC.ThemesController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        public const string UrlPath = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Admin {
            public const string UrlPath = "~/Scripts/Admin";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string _DS_Store = Url(".DS_Store");
            public static readonly string application_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/application.min.js") ? Url("application.min.js") : Url("application.js");
            public static readonly string application_blank_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/application_blank.min.js") ? Url("application_blank.min.js") : Url("application_blank.js");
            public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class charts {
                public const string UrlPath = "~/Scripts/Admin/charts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string _DS_Store = Url(".DS_Store");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class full {
                    public const string UrlPath = "~/Scripts/Admin/charts/full";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string animated_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/animated_1.min.js") ? Url("animated_1.min.js") : Url("animated_1.js");
                    public static readonly string animated_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/animated_2.min.js") ? Url("animated_2.min.js") : Url("animated_2.js");
                    public static readonly string animated_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/animated_3.min.js") ? Url("animated_3.min.js") : Url("animated_3.js");
                    public static readonly string auto_empty_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/auto_empty.min.js") ? Url("auto_empty.min.js") : Url("auto_empty.js");
                    public static readonly string auto_filled_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/auto_filled.min.js") ? Url("auto_filled.min.js") : Url("auto_filled.js");
                    public static readonly string donut_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/donut.min.js") ? Url("donut.min.js") : Url("donut.js");
                    public static readonly string horizontal_bars_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/horizontal_bars.min.js") ? Url("horizontal_bars.min.js") : Url("horizontal_bars.js");
                    public static readonly string multiple_axes_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/multiple_axes.min.js") ? Url("multiple_axes.min.js") : Url("multiple_axes.js");
                    public static readonly string pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pie.min.js") ? Url("pie.min.js") : Url("pie.js");
                    public static readonly string pie_full_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pie_full.min.js") ? Url("pie_full.min.js") : Url("pie_full.js");
                    public static readonly string simple_graph_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/simple_graph.min.js") ? Url("simple_graph.min.js") : Url("simple_graph.js");
                    public static readonly string vertical_bars_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/vertical_bars.min.js") ? Url("vertical_bars.min.js") : Url("vertical_bars.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class widgets {
                    public const string UrlPath = "~/Scripts/Admin/charts/widgets";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string _DS_Store = Url(".DS_Store");
                    public static readonly string filled_blue_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/filled_blue.min.js") ? Url("filled_blue.min.js") : Url("filled_blue.js");
                    public static readonly string filled_green_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/filled_green.min.js") ? Url("filled_green.min.js") : Url("filled_green.js");
                    public static readonly string filled_red_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/filled_red.min.js") ? Url("filled_red.min.js") : Url("filled_red.js");
                    public static readonly string updating_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/updating_1.min.js") ? Url("updating_1.min.js") : Url("updating_1.js");
                    public static readonly string updating_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/updating_2.min.js") ? Url("updating_2.min.js") : Url("updating_2.js");
                    public static readonly string updating_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/updating_3.min.js") ? Url("updating_3.min.js") : Url("updating_3.js");
                }
            
            }
        
            public static readonly string common_scripts_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/common.scripts.min.js") ? Url("common.scripts.min.js") : Url("common.scripts.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class globalize {
                public const string UrlPath = "~/Scripts/Admin/globalize";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string globalize_culture_de_DE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/globalize.culture.de-DE.min.js") ? Url("globalize.culture.de-DE.min.js") : Url("globalize.culture.de-DE.js");
                public static readonly string globalize_culture_ja_JP_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/globalize.culture.ja-JP.min.js") ? Url("globalize.culture.ja-JP.min.js") : Url("globalize.culture.ja-JP.js");
                public static readonly string globalize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/globalize.min.js") ? Url("globalize.min.js") : Url("globalize.js");
            }
        
            public static readonly string jqueryval_default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jqueryval.default.min.js") ? Url("jqueryval.default.min.js") : Url("jqueryval.default.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plugins {
                public const string UrlPath = "~/Scripts/Admin/plugins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string _DS_Store = Url(".DS_Store");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class admininterface {
                    public const string UrlPath = "~/Scripts/Admin/plugins/admininterface";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string _DS_Store = Url(".DS_Store");
                    public static readonly string collapsible_min_js = Url("collapsible.min.js");
                    public static readonly string colorpicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/colorpicker.min.js") ? Url("colorpicker.min.js") : Url("colorpicker.js");
                    public static readonly string datatables_min_js = Url("datatables.min.js");
                    public static readonly string daterangepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/daterangepicker.min.js") ? Url("daterangepicker.min.js") : Url("daterangepicker.js");
                    public static readonly string fancybox_min_js = Url("fancybox.min.js");
                    public static readonly string fullcalendar_min_js = Url("fullcalendar.min.js");
                    public static readonly string hover_dropdown_min_js = Url("hover_dropdown.min.js");
                    public static readonly string jgrowl_min_js = Url("jgrowl.min.js");
                    public static readonly string moment_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moment.min.js") ? Url("moment.min.js") : Url("moment.js");
                    public static readonly string mousewheel_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/mousewheel.min.js") ? Url("mousewheel.min.js") : Url("mousewheel.js");
                    public static readonly string prettify_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/prettify.min.js") ? Url("prettify.min.js") : Url("prettify.js");
                    public static readonly string tabletools_min_js = Url("tabletools.min.js");
                    public static readonly string timepicker_min_js = Url("timepicker.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class charts {
                    public const string UrlPath = "~/Scripts/Admin/plugins/charts";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string _DS_Store = Url(".DS_Store");
                    public static readonly string excanvas_min_js = Url("excanvas.min.js");
                    public static readonly string flot_animator_min_js = Url("flot.animator.min.js");
                    public static readonly string flot_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/flot.min.js") ? Url("flot.min.js") : Url("flot.js");
                    public static readonly string flot_orderbars_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/flot.orderbars.min.js") ? Url("flot.orderbars.min.js") : Url("flot.orderbars.js");
                    public static readonly string flot_pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/flot.pie.min.js") ? Url("flot.pie.min.js") : Url("flot.pie.js");
                    public static readonly string flot_resize_min_js = Url("flot.resize.min.js");
                    public static readonly string flot_time_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/flot.time.min.js") ? Url("flot.time.min.js") : Url("flot.time.js");
                    public static readonly string sparkline_min_js = Url("sparkline.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class forms {
                    public const string UrlPath = "~/Scripts/Admin/plugins/forms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string _DS_Store = Url(".DS_Store");
                    public static readonly string autosize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/autosize.min.js") ? Url("autosize.min.js") : Url("autosize.js");
                    public static readonly string inputlimit_min_js = Url("inputlimit.min.js");
                    public static readonly string inputmask_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/inputmask.min.js") ? Url("inputmask.min.js") : Url("inputmask.js");
                    public static readonly string listbox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/listbox.min.js") ? Url("listbox.min.js") : Url("listbox.js");
                    public static readonly string multiselect_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/multiselect.min.js") ? Url("multiselect.min.js") : Url("multiselect.js");
                    public static readonly string select2_min_js = Url("select2.min.js");
                    public static readonly string switch_min_js = Url("switch.min.js");
                    public static readonly string tags_min_js = Url("tags.min.js");
                    public static readonly string uniform_min_js = Url("uniform.min.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class uploader {
                        public const string UrlPath = "~/Scripts/Admin/plugins/forms/uploader";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string plupload_full_min_js = Url("plupload.full.min.js");
                        public static readonly string plupload_queue_min_js = Url("plupload.queue.min.js");
                    }
                
                    public static readonly string validate_min_js = Url("validate.min.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class wysihtml5 {
                        public const string UrlPath = "~/Scripts/Admin/plugins/forms/wysihtml5";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string toolbar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/toolbar.min.js") ? Url("toolbar.min.js") : Url("toolbar.js");
                        public static readonly string wysihtml5_min_js = Url("wysihtml5.min.js");
                    }
                
                }
            
            }
        
        }
    
        public static readonly string bootstrap_rtl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-rtl.min.js") ? Url("bootstrap-rtl.min.js") : Url("bootstrap-rtl.js");
        public static readonly string bootstrap_rtl_min_js = Url("bootstrap-rtl.min.js");
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class ckeditor {
            public const string UrlPath = "~/Scripts/ckeditor";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class adapters {
                public const string UrlPath = "~/Scripts/ckeditor/adapters";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
            }
        
            public static readonly string CHANGES_html = Url("CHANGES.html");
            public static readonly string ckeditor_asp = Url("ckeditor.asp");
            public static readonly string ckeditor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ckeditor.min.js") ? Url("ckeditor.min.js") : Url("ckeditor.js");
            public static readonly string ckeditor_pack = Url("ckeditor.pack");
            public static readonly string ckeditor_php = Url("ckeditor.php");
            public static readonly string ckeditor_basic_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ckeditor_basic.min.js") ? Url("ckeditor_basic.min.js") : Url("ckeditor_basic.js");
            public static readonly string ckeditor_basic_source_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ckeditor_basic_source.min.js") ? Url("ckeditor_basic_source.min.js") : Url("ckeditor_basic_source.js");
            public static readonly string ckeditor_php4_php = Url("ckeditor_php4.php");
            public static readonly string ckeditor_php5_php = Url("ckeditor_php5.php");
            public static readonly string ckeditor_source_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ckeditor_source.min.js") ? Url("ckeditor_source.min.js") : Url("ckeditor_source.js");
            public static readonly string config_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/config.min.js") ? Url("config.min.js") : Url("config.js");
            public static readonly string contents_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/contents.min.css") ? Url("contents.min.css") : Url("contents.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class images {
                public const string UrlPath = "~/Scripts/ckeditor/images";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string spacer_gif = Url("spacer.gif");
            }
        
            public static readonly string INSTALL_html = Url("INSTALL.html");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class lang {
                public const string UrlPath = "~/Scripts/ckeditor/lang";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string _languages_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/_languages.min.js") ? Url("_languages.min.js") : Url("_languages.js");
                public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                public static readonly string af_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/af.min.js") ? Url("af.min.js") : Url("af.js");
                public static readonly string ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ar.min.js") ? Url("ar.min.js") : Url("ar.js");
                public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                public static readonly string bn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bn.min.js") ? Url("bn.min.js") : Url("bn.js");
                public static readonly string bs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bs.min.js") ? Url("bs.min.js") : Url("bs.js");
                public static readonly string ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ca.min.js") ? Url("ca.min.js") : Url("ca.js");
                public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                public static readonly string en_au_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/en-au.min.js") ? Url("en-au.min.js") : Url("en-au.js");
                public static readonly string en_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/en-ca.min.js") ? Url("en-ca.min.js") : Url("en-ca.js");
                public static readonly string en_gb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/en-gb.min.js") ? Url("en-gb.min.js") : Url("en-gb.js");
                public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                public static readonly string es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/es.min.js") ? Url("es.min.js") : Url("es.js");
                public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                public static readonly string eu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/eu.min.js") ? Url("eu.min.js") : Url("eu.js");
                public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                public static readonly string fo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fo.min.js") ? Url("fo.min.js") : Url("fo.js");
                public static readonly string fr_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fr-ca.min.js") ? Url("fr-ca.min.js") : Url("fr-ca.js");
                public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                public static readonly string gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/gl.min.js") ? Url("gl.min.js") : Url("gl.js");
                public static readonly string gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/gu.min.js") ? Url("gu.min.js") : Url("gu.js");
                public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                public static readonly string hi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/hi.min.js") ? Url("hi.min.js") : Url("hi.js");
                public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                public static readonly string hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/hu.min.js") ? Url("hu.min.js") : Url("hu.js");
                public static readonly string id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/id.min.js") ? Url("id.min.js") : Url("id.js");
                public static readonly string is_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/is.min.js") ? Url("is.min.js") : Url("is.js");
                public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                public static readonly string ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ja.min.js") ? Url("ja.min.js") : Url("ja.js");
                public static readonly string ka_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ka.min.js") ? Url("ka.min.js") : Url("ka.js");
                public static readonly string km_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/km.min.js") ? Url("km.min.js") : Url("km.js");
                public static readonly string ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ko.min.js") ? Url("ko.min.js") : Url("ko.js");
                public static readonly string lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/lt.min.js") ? Url("lt.min.js") : Url("lt.js");
                public static readonly string lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/lv.min.js") ? Url("lv.min.js") : Url("lv.js");
                public static readonly string mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/mk.min.js") ? Url("mk.min.js") : Url("mk.js");
                public static readonly string mn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/mn.min.js") ? Url("mn.min.js") : Url("mn.js");
                public static readonly string ms_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ms.min.js") ? Url("ms.min.js") : Url("ms.js");
                public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                public static readonly string pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pt.min.js") ? Url("pt.min.js") : Url("pt.js");
                public static readonly string ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ro.min.js") ? Url("ro.min.js") : Url("ro.js");
                public static readonly string ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ru.min.js") ? Url("ru.min.js") : Url("ru.js");
                public static readonly string sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/sk.min.js") ? Url("sk.min.js") : Url("sk.js");
                public static readonly string sl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/sl.min.js") ? Url("sl.min.js") : Url("sl.js");
                public static readonly string sr_latn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/sr-latn.min.js") ? Url("sr-latn.min.js") : Url("sr-latn.js");
                public static readonly string sr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/sr.min.js") ? Url("sr.min.js") : Url("sr.js");
                public static readonly string sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/sv.min.js") ? Url("sv.min.js") : Url("sv.js");
                public static readonly string th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/th.min.js") ? Url("th.min.js") : Url("th.js");
                public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                public static readonly string zh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/zh.min.js") ? Url("zh.min.js") : Url("zh.js");
            }
        
            public static readonly string LICENSE_html = Url("LICENSE.html");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plugins {
                public const string UrlPath = "~/Scripts/ckeditor/plugins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class a11yhelp {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/a11yhelp";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string a11yhelp_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/a11yhelp.min.js") ? Url("a11yhelp.min.js") : Url("a11yhelp.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/a11yhelp/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/gu.min.js") ? Url("gu.min.js") : Url("gu.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/mk.min.js") ? Url("mk.min.js") : Url("mk.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ro.min.js") ? Url("ro.min.js") : Url("ro.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class about {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/about";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/about/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string about_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/about.min.js") ? Url("about.min.js") : Url("about.js");
                        public static readonly string logo_ckeditor_png = Url("logo_ckeditor.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class adobeair {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/adobeair";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ajax {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/ajax";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class autogrow {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/autogrow";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class bbcode {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/bbcode";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class clipboard {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/clipboard";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/clipboard/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string paste_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/paste.min.js") ? Url("paste.min.js") : Url("paste.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class colordialog {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/colordialog";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/colordialog/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string colordialog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/colordialog.min.js") ? Url("colordialog.min.js") : Url("colordialog.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class devtools {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/devtools";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/devtools/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                        public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/gu.min.js") ? Url("gu.min.js") : Url("gu.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                        public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                    }
                
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class dialog {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/dialog";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string dialogDefinition_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/dialogDefinition.min.js") ? Url("dialogDefinition.min.js") : Url("dialogDefinition.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class div {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/div";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/div/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string div_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/div.min.js") ? Url("div.min.js") : Url("div.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class docprops {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/docprops";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/docprops/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string docprops_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/docprops.min.js") ? Url("docprops.min.js") : Url("docprops.js");
                    }
                
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class find {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/find";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/find/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string find_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/find.min.js") ? Url("find.min.js") : Url("find.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class flash {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/flash";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/flash/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string flash_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/flash.min.js") ? Url("flash.min.js") : Url("flash.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/flash/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string placeholder_png = Url("placeholder.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class forms {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/forms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/forms/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string button_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/button.min.js") ? Url("button.min.js") : Url("button.js");
                        public static readonly string checkbox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/checkbox.min.js") ? Url("checkbox.min.js") : Url("checkbox.js");
                        public static readonly string form_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/form.min.js") ? Url("form.min.js") : Url("form.js");
                        public static readonly string hiddenfield_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/hiddenfield.min.js") ? Url("hiddenfield.min.js") : Url("hiddenfield.js");
                        public static readonly string radio_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/radio.min.js") ? Url("radio.min.js") : Url("radio.js");
                        public static readonly string select_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/select.min.js") ? Url("select.min.js") : Url("select.js");
                        public static readonly string textarea_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/textarea.min.js") ? Url("textarea.min.js") : Url("textarea.js");
                        public static readonly string textfield_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/textfield.min.js") ? Url("textfield.min.js") : Url("textfield.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/forms/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string hiddenfield_gif = Url("hiddenfield.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class iframe {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/iframe";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/iframe/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string iframe_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/iframe.min.js") ? Url("iframe.min.js") : Url("iframe.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/iframe/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string placeholder_png = Url("placeholder.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class iframedialog {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/iframedialog";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class image {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/image";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/image/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string image_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/image.min.js") ? Url("image.min.js") : Url("image.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class link {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/link";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/link/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string anchor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/anchor.min.js") ? Url("anchor.min.js") : Url("anchor.js");
                        public static readonly string link_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/link.min.js") ? Url("link.min.js") : Url("link.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/link/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string anchor_gif = Url("anchor.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class liststyle {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/liststyle";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/liststyle/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string liststyle_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/liststyle.min.js") ? Url("liststyle.min.js") : Url("liststyle.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pagebreak {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/pagebreak";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/pagebreak/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string pagebreak_gif = Url("pagebreak.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pastefromword {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/pastefromword";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class filter {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/pastefromword/filter";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pastetext {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/pastetext";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/pastetext/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string pastetext_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pastetext.min.js") ? Url("pastetext.min.js") : Url("pastetext.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class placeholder {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/placeholder";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/placeholder/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string placeholder_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/placeholder.min.js") ? Url("placeholder.min.js") : Url("placeholder.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/placeholder/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                        public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                        public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                    }
                
                    public static readonly string placeholder_gif = Url("placeholder.gif");
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class preview {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/preview";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string preview_html = Url("preview.html");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class scayt {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/scayt";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/scayt/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string options_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/options.min.js") ? Url("options.min.js") : Url("options.js");
                        public static readonly string toolbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/toolbar.min.css") ? Url("toolbar.min.css") : Url("toolbar.css");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class showblocks {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/showblocks";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/showblocks/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string block_address_png = Url("block_address.png");
                        public static readonly string block_blockquote_png = Url("block_blockquote.png");
                        public static readonly string block_div_png = Url("block_div.png");
                        public static readonly string block_h1_png = Url("block_h1.png");
                        public static readonly string block_h2_png = Url("block_h2.png");
                        public static readonly string block_h3_png = Url("block_h3.png");
                        public static readonly string block_h4_png = Url("block_h4.png");
                        public static readonly string block_h5_png = Url("block_h5.png");
                        public static readonly string block_h6_png = Url("block_h6.png");
                        public static readonly string block_p_png = Url("block_p.png");
                        public static readonly string block_pre_png = Url("block_pre.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class smiley {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/smiley";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/smiley/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string smiley_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/smiley.min.js") ? Url("smiley.min.js") : Url("smiley.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/smiley/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string angel_smile_gif = Url("angel_smile.gif");
                        public static readonly string angry_smile_gif = Url("angry_smile.gif");
                        public static readonly string broken_heart_gif = Url("broken_heart.gif");
                        public static readonly string confused_smile_gif = Url("confused_smile.gif");
                        public static readonly string cry_smile_gif = Url("cry_smile.gif");
                        public static readonly string devil_smile_gif = Url("devil_smile.gif");
                        public static readonly string embaressed_smile_gif = Url("embaressed_smile.gif");
                        public static readonly string envelope_gif = Url("envelope.gif");
                        public static readonly string heart_gif = Url("heart.gif");
                        public static readonly string kiss_gif = Url("kiss.gif");
                        public static readonly string lightbulb_gif = Url("lightbulb.gif");
                        public static readonly string omg_smile_gif = Url("omg_smile.gif");
                        public static readonly string regular_smile_gif = Url("regular_smile.gif");
                        public static readonly string sad_smile_gif = Url("sad_smile.gif");
                        public static readonly string shades_smile_gif = Url("shades_smile.gif");
                        public static readonly string teeth_smile_gif = Url("teeth_smile.gif");
                        public static readonly string thumbs_down_gif = Url("thumbs_down.gif");
                        public static readonly string thumbs_up_gif = Url("thumbs_up.gif");
                        public static readonly string tounge_smile_gif = Url("tounge_smile.gif");
                        public static readonly string whatchutalkingabout_smile_gif = Url("whatchutalkingabout_smile.gif");
                        public static readonly string wink_smile_gif = Url("wink_smile.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class specialchar {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/specialchar";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/specialchar/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string specialchar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/specialchar.min.js") ? Url("specialchar.min.js") : Url("specialchar.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/specialchar/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class styles {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/styles";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class styles_ {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/styles/styles";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class stylesheetparser {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/stylesheetparser";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class table {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/table";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/table/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string table_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/table.min.js") ? Url("table.min.js") : Url("table.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tableresize {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/tableresize";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tabletools {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/tabletools";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/tabletools/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string tableCell_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tableCell.min.js") ? Url("tableCell.min.js") : Url("tableCell.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class templates {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/templates";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/templates/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string templates_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/templates.min.js") ? Url("templates.min.js") : Url("templates.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class templates_ {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/templates/templates";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            public const string UrlPath = "~/Scripts/ckeditor/plugins/templates/templates/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                            public static readonly string template1_gif = Url("template1.gif");
                            public static readonly string template2_gif = Url("template2.gif");
                            public static readonly string template3_gif = Url("template3.gif");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class uicolor {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/uicolor";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/uicolor/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string uicolor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/uicolor.min.js") ? Url("uicolor.min.js") : Url("uicolor.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/uicolor/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                        public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/mk.min.js") ? Url("mk.min.js") : Url("mk.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                        public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                    }
                
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string uicolor_gif = Url("uicolor.gif");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class yui {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/uicolor/yui";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class assets {
                            public const string UrlPath = "~/Scripts/ckeditor/plugins/uicolor/yui/assets";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                            public static readonly string hue_bg_png = Url("hue_bg.png");
                            public static readonly string hue_thumb_png = Url("hue_thumb.png");
                            public static readonly string picker_mask_png = Url("picker_mask.png");
                            public static readonly string picker_thumb_png = Url("picker_thumb.png");
                            public static readonly string yui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/yui.min.css") ? Url("yui.min.css") : Url("yui.css");
                        }
                    
                        public static readonly string yui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/yui.min.js") ? Url("yui.min.js") : Url("yui.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class wsc {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/wsc";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        public const string UrlPath = "~/Scripts/ckeditor/plugins/wsc/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string ciframe_html = Url("ciframe.html");
                        public static readonly string tmpFrameset_html = Url("tmpFrameset.html");
                        public static readonly string wsc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/wsc.min.css") ? Url("wsc.min.css") : Url("wsc.css");
                        public static readonly string wsc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/wsc.min.js") ? Url("wsc.min.js") : Url("wsc.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class xml {
                    public const string UrlPath = "~/Scripts/ckeditor/plugins/xml";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skins {
                public const string UrlPath = "~/Scripts/ckeditor/skins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class kama {
                    public const string UrlPath = "~/Scripts/ckeditor/skins/kama";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string editor_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/editor.min.css") ? Url("editor.min.css") : Url("editor.css");
                    public static readonly string icons_png = Url("icons.png");
                    public static readonly string icons_rtl_png = Url("icons_rtl.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        public const string UrlPath = "~/Scripts/ckeditor/skins/kama/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string dialog_sides_gif = Url("dialog_sides.gif");
                        public static readonly string dialog_sides_png = Url("dialog_sides.png");
                        public static readonly string dialog_sides_rtl_png = Url("dialog_sides_rtl.png");
                        public static readonly string mini_gif = Url("mini.gif");
                        public static readonly string noimage_png = Url("noimage.png");
                        public static readonly string sprites_png = Url("sprites.png");
                        public static readonly string sprites_ie6_png = Url("sprites_ie6.png");
                        public static readonly string toolbar_start_gif = Url("toolbar_start.gif");
                    }
                
                    public static readonly string skin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/skin.min.js") ? Url("skin.min.js") : Url("skin.js");
                    public static readonly string templates_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/templates.min.css") ? Url("templates.min.css") : Url("templates.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class office2003 {
                    public const string UrlPath = "~/Scripts/ckeditor/skins/office2003";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string editor_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/editor.min.css") ? Url("editor.min.css") : Url("editor.css");
                    public static readonly string icons_png = Url("icons.png");
                    public static readonly string icons_rtl_png = Url("icons_rtl.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        public const string UrlPath = "~/Scripts/ckeditor/skins/office2003/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string dialog_sides_gif = Url("dialog_sides.gif");
                        public static readonly string dialog_sides_png = Url("dialog_sides.png");
                        public static readonly string dialog_sides_rtl_png = Url("dialog_sides_rtl.png");
                        public static readonly string mini_gif = Url("mini.gif");
                        public static readonly string noimage_png = Url("noimage.png");
                        public static readonly string sprites_png = Url("sprites.png");
                        public static readonly string sprites_ie6_png = Url("sprites_ie6.png");
                    }
                
                    public static readonly string skin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/skin.min.js") ? Url("skin.min.js") : Url("skin.js");
                    public static readonly string templates_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/templates.min.css") ? Url("templates.min.css") : Url("templates.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class v2 {
                    public const string UrlPath = "~/Scripts/ckeditor/skins/v2";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string editor_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/editor.min.css") ? Url("editor.min.css") : Url("editor.css");
                    public static readonly string icons_png = Url("icons.png");
                    public static readonly string icons_rtl_png = Url("icons_rtl.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        public const string UrlPath = "~/Scripts/ckeditor/skins/v2/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string dialog_sides_gif = Url("dialog_sides.gif");
                        public static readonly string dialog_sides_png = Url("dialog_sides.png");
                        public static readonly string dialog_sides_rtl_png = Url("dialog_sides_rtl.png");
                        public static readonly string mini_gif = Url("mini.gif");
                        public static readonly string noimage_png = Url("noimage.png");
                        public static readonly string sprites_png = Url("sprites.png");
                        public static readonly string sprites_ie6_png = Url("sprites_ie6.png");
                        public static readonly string toolbar_start_gif = Url("toolbar_start.gif");
                    }
                
                    public static readonly string skin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/skin.min.js") ? Url("skin.min.js") : Url("skin.js");
                    public static readonly string templates_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/templates.min.css") ? Url("templates.min.css") : Url("templates.css");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class themes {
                public const string UrlPath = "~/Scripts/ckeditor/themes";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class @default {
                    public const string UrlPath = "~/Scripts/ckeditor/themes/default";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string theme_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/theme.min.js") ? Url("theme.min.js") : Url("theme.js");
                }
            
            }
        
        }
    
        public static readonly string jquery_3_1_0_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.1.0.intellisense.min.js") ? Url("jquery-3.1.0.intellisense.min.js") : Url("jquery-3.1.0.intellisense.js");
        public static readonly string jquery_3_1_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.1.0.min.js") ? Url("jquery-3.1.0.min.js") : Url("jquery-3.1.0.js");
        public static readonly string jquery_3_1_0_min_js = Url("jquery-3.1.0.min.js");
        public static readonly string jquery_3_1_0_min_map = Url("jquery-3.1.0.min.map");
        public static readonly string jquery_3_1_0_slim_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.1.0.slim.min.js") ? Url("jquery-3.1.0.slim.min.js") : Url("jquery-3.1.0.slim.js");
        public static readonly string jquery_3_1_0_slim_min_js = Url("jquery-3.1.0.slim.min.js");
        public static readonly string jquery_3_1_0_slim_min_map = Url("jquery-3.1.0.slim.min.map");
        public static readonly string jquery_migrate_3_0_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-migrate-3.0.0.min.js") ? Url("jquery-migrate-3.0.0.min.js") : Url("jquery-migrate-3.0.0.js");
        public static readonly string jquery_migrate_3_0_0_min_js = Url("jquery-migrate-3.0.0.min.js");
        public static readonly string jquery_ui_1_12_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-ui-1.12.0.min.js") ? Url("jquery-ui-1.12.0.min.js") : Url("jquery-ui-1.12.0.js");
        public static readonly string jquery_ui_1_12_0_min_js = Url("jquery-ui-1.12.0.min.js");
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Loom {
            public const string UrlPath = "~/Scripts/Loom";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
            public static readonly string canvas_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/canvas.min.js") ? Url("canvas.min.js") : Url("canvas.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fancybox {
                public const string UrlPath = "~/Scripts/Loom/fancybox";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string blank_gif = Url("blank.gif");
                public static readonly string fancybox_loading_html = Url("fancybox_loading.html");
                public static readonly string fancybox_overlay_png = Url("fancybox_overlay.png");
                public static readonly string fancybox_sprite_html = Url("fancybox_sprite.html");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class helpers {
                    public const string UrlPath = "~/Scripts/Loom/fancybox/helpers";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string jquery_fancybox_mediae209_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.fancybox-mediae209.min.js") ? Url("jquery.fancybox-mediae209.min.js") : Url("jquery.fancybox-mediae209.js");
                    public static readonly string jquery_fancybox_thumbs0ff5_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.fancybox-thumbs0ff5.min.css") ? Url("jquery.fancybox-thumbs0ff5.min.css") : Url("jquery.fancybox-thumbs0ff5.css");
                    public static readonly string jquery_fancybox_thumbs0ff5_min_css = Url("jquery.fancybox-thumbs0ff5.min.css");
                    public static readonly string jquery_fancybox_thumbs0ff5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.fancybox-thumbs0ff5.min.js") ? Url("jquery.fancybox-thumbs0ff5.min.js") : Url("jquery.fancybox-thumbs0ff5.js");
                }
            
                public static readonly string jquery_fancybox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.fancybox.min.css") ? Url("jquery.fancybox.min.css") : Url("jquery.fancybox.css");
                public static readonly string jquery_fancybox_min_css = Url("jquery.fancybox.min.css");
            }
        
            public static readonly string jquery_easytabs_min_js = Url("jquery.easytabs.min.js");
            public static readonly string jquery_fancybox_pack_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.fancybox.pack.min.js") ? Url("jquery.fancybox.pack.min.js") : Url("jquery.fancybox.pack.js");
            public static readonly string jquery_fitvids_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.fitvids.min.js") ? Url("jquery.fitvids.min.js") : Url("jquery.fitvids.js");
            public static readonly string jquery_isotope_min_js = Url("jquery.isotope.min.js");
            public static readonly string jquery_min_js = Url("jquery.min.js");
            public static readonly string jquery_slickforms_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.slickforms.min.js") ? Url("jquery.slickforms.min.js") : Url("jquery.slickforms.js");
            public static readonly string jquery_sticky_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.sticky.min.js") ? Url("jquery.sticky.min.js") : Url("jquery.sticky.js");
            public static readonly string jquery_themepunch_plugins_min_js = Url("jquery.themepunch.plugins.min.js");
            public static readonly string jquery_themepunch_revolution_min_js = Url("jquery.themepunch.revolution.min.js");
            public static readonly string owl_carousel_min_js = Url("owl.carousel.min.js");
            public static readonly string prettify_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/prettify.min.js") ? Url("prettify.min.js") : Url("prettify.js");
            public static readonly string retina_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/retina.min.js") ? Url("retina.min.js") : Url("retina.js");
            public static readonly string scripts_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/scripts.min.js") ? Url("scripts.min.js") : Url("scripts.js");
            public static readonly string twitter_bootstrap_hover_dropdown_min_js = Url("twitter-bootstrap-hover-dropdown.min.js");
        }
    
        public static readonly string modernizr_2_8_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/modernizr-2.8.3.min.js") ? Url("modernizr-2.8.3.min.js") : Url("modernizr-2.8.3.js");
        public static readonly string respond_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/respond.min.js") ? Url("respond.min.js") : Url("respond.js");
        public static readonly string respond_matchmedia_addListener_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/respond.matchmedia.addListener.min.js") ? Url("respond.matchmedia.addListener.min.js") : Url("respond.matchmedia.addListener.js");
        public static readonly string respond_matchmedia_addListener_min_js = Url("respond.matchmedia.addListener.min.js");
        public static readonly string respond_min_js = Url("respond.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class RoxyFileManager {
            public const string UrlPath = "~/Scripts/RoxyFileManager";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class asp_net {
                public const string UrlPath = "~/Scripts/RoxyFileManager/asp_net";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string main_ashx = Url("main.ashx");
            }
        
            public static readonly string conf_json = Url("conf.json");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                public const string UrlPath = "~/Scripts/RoxyFileManager/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    public const string UrlPath = "~/Scripts/RoxyFileManager/css/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string animated_overlay_gif = Url("animated-overlay.gif");
                    public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                    public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                    public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                    public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                    public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                    public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                    public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                    public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                    public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                    public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                    public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                    public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                    public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                }
            
                public static readonly string jquery_ui_1_10_4_custom_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-ui-1.10.4.custom.min.css") ? Url("jquery-ui-1.10.4.custom.min.css") : Url("jquery-ui-1.10.4.custom.css");
                public static readonly string jquery_ui_1_10_4_custom_min_css = Url("jquery-ui-1.10.4.custom.min.css");
                public static readonly string main_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/main.min.css") ? Url("main.min.css") : Url("main.css");
                public static readonly string main_min_css = Url("main.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class images {
                public const string UrlPath = "~/Scripts/RoxyFileManager/images";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string action_folder_paste_png = Url("action-folder-paste.png");
                public static readonly string action_folder_rename_png = Url("action-folder-rename.png");
                public static readonly string arrow_down_png = Url("arrow_down.png");
                public static readonly string arrow_up_png = Url("arrow_up.png");
                public static readonly string blank_gif = Url("blank.gif");
                public static readonly string copy_png = Url("copy.png");
                public static readonly string cut_png = Url("cut.png");
                public static readonly string dir_minus_png = Url("dir-minus.png");
                public static readonly string dir_plus_png = Url("dir-plus.png");
                public static readonly string file_add_png = Url("file-add.png");
                public static readonly string file_delete_png = Url("file-delete.png");
                public static readonly string file_download_png = Url("file-download.png");
                public static readonly string file_duplicate_png = Url("file-duplicate.png");
                public static readonly string file_upload_png = Url("file-upload.png");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class filetypes {
                    public const string UrlPath = "~/Scripts/RoxyFileManager/images/filetypes";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class big {
                        public const string UrlPath = "~/Scripts/RoxyFileManager/images/filetypes/big";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string file_extension_3gp_png = Url("file_extension_3gp.png");
                        public static readonly string file_extension_7z_png = Url("file_extension_7z.png");
                        public static readonly string file_extension_ace_png = Url("file_extension_ace.png");
                        public static readonly string file_extension_ai_png = Url("file_extension_ai.png");
                        public static readonly string file_extension_aif_png = Url("file_extension_aif.png");
                        public static readonly string file_extension_aiff_png = Url("file_extension_aiff.png");
                        public static readonly string file_extension_amr_png = Url("file_extension_amr.png");
                        public static readonly string file_extension_asf_png = Url("file_extension_asf.png");
                        public static readonly string file_extension_asx_png = Url("file_extension_asx.png");
                        public static readonly string file_extension_bat_png = Url("file_extension_bat.png");
                        public static readonly string file_extension_bin_png = Url("file_extension_bin.png");
                        public static readonly string file_extension_bmp_png = Url("file_extension_bmp.png");
                        public static readonly string file_extension_bup_png = Url("file_extension_bup.png");
                        public static readonly string file_extension_cab_png = Url("file_extension_cab.png");
                        public static readonly string file_extension_cbr_png = Url("file_extension_cbr.png");
                        public static readonly string file_extension_cda_png = Url("file_extension_cda.png");
                        public static readonly string file_extension_cdl_png = Url("file_extension_cdl.png");
                        public static readonly string file_extension_cdr_png = Url("file_extension_cdr.png");
                        public static readonly string file_extension_chm_png = Url("file_extension_chm.png");
                        public static readonly string file_extension_dat_png = Url("file_extension_dat.png");
                        public static readonly string file_extension_divx_png = Url("file_extension_divx.png");
                        public static readonly string file_extension_dll_png = Url("file_extension_dll.png");
                        public static readonly string file_extension_dmg_png = Url("file_extension_dmg.png");
                        public static readonly string file_extension_doc_png = Url("file_extension_doc.png");
                        public static readonly string file_extension_dss_png = Url("file_extension_dss.png");
                        public static readonly string file_extension_dvf_png = Url("file_extension_dvf.png");
                        public static readonly string file_extension_dwg_png = Url("file_extension_dwg.png");
                        public static readonly string file_extension_eml_png = Url("file_extension_eml.png");
                        public static readonly string file_extension_eps_png = Url("file_extension_eps.png");
                        public static readonly string file_extension_exe_png = Url("file_extension_exe.png");
                        public static readonly string file_extension_fla_png = Url("file_extension_fla.png");
                        public static readonly string file_extension_flv_png = Url("file_extension_flv.png");
                        public static readonly string file_extension_gif_png = Url("file_extension_gif.png");
                        public static readonly string file_extension_gz_png = Url("file_extension_gz.png");
                        public static readonly string file_extension_hqx_png = Url("file_extension_hqx.png");
                        public static readonly string file_extension_htm_png = Url("file_extension_htm.png");
                        public static readonly string file_extension_html_png = Url("file_extension_html.png");
                        public static readonly string file_extension_ifo_png = Url("file_extension_ifo.png");
                        public static readonly string file_extension_indd_png = Url("file_extension_indd.png");
                        public static readonly string file_extension_iso_png = Url("file_extension_iso.png");
                        public static readonly string file_extension_jar_png = Url("file_extension_jar.png");
                        public static readonly string file_extension_jpeg_png = Url("file_extension_jpeg.png");
                        public static readonly string file_extension_jpg_png = Url("file_extension_jpg.png");
                        public static readonly string file_extension_lnk_png = Url("file_extension_lnk.png");
                        public static readonly string file_extension_log_png = Url("file_extension_log.png");
                        public static readonly string file_extension_m4a_png = Url("file_extension_m4a.png");
                        public static readonly string file_extension_m4b_png = Url("file_extension_m4b.png");
                        public static readonly string file_extension_m4p_png = Url("file_extension_m4p.png");
                        public static readonly string file_extension_m4v_png = Url("file_extension_m4v.png");
                        public static readonly string file_extension_mcd_png = Url("file_extension_mcd.png");
                        public static readonly string file_extension_mdb_png = Url("file_extension_mdb.png");
                        public static readonly string file_extension_mid_png = Url("file_extension_mid.png");
                        public static readonly string file_extension_mov_png = Url("file_extension_mov.png");
                        public static readonly string file_extension_mp2_png = Url("file_extension_mp2.png");
                        public static readonly string file_extension_mp3_png = Url("file_extension_mp3.png");
                        public static readonly string file_extension_mp4_png = Url("file_extension_mp4.png");
                        public static readonly string file_extension_mpeg_png = Url("file_extension_mpeg.png");
                        public static readonly string file_extension_mpg_png = Url("file_extension_mpg.png");
                        public static readonly string file_extension_msi_png = Url("file_extension_msi.png");
                        public static readonly string file_extension_mswmm_png = Url("file_extension_mswmm.png");
                        public static readonly string file_extension_ogg_png = Url("file_extension_ogg.png");
                        public static readonly string file_extension_pdf_png = Url("file_extension_pdf.png");
                        public static readonly string file_extension_png_png = Url("file_extension_png.png");
                        public static readonly string file_extension_pps_png = Url("file_extension_pps.png");
                        public static readonly string file_extension_ps_png = Url("file_extension_ps.png");
                        public static readonly string file_extension_psd_png = Url("file_extension_psd.png");
                        public static readonly string file_extension_pst_png = Url("file_extension_pst.png");
                        public static readonly string file_extension_ptb_png = Url("file_extension_ptb.png");
                        public static readonly string file_extension_pub_png = Url("file_extension_pub.png");
                        public static readonly string file_extension_qbb_png = Url("file_extension_qbb.png");
                        public static readonly string file_extension_qbw_png = Url("file_extension_qbw.png");
                        public static readonly string file_extension_qxd_png = Url("file_extension_qxd.png");
                        public static readonly string file_extension_ram_png = Url("file_extension_ram.png");
                        public static readonly string file_extension_rar_png = Url("file_extension_rar.png");
                        public static readonly string file_extension_rm_png = Url("file_extension_rm.png");
                        public static readonly string file_extension_rmvb_png = Url("file_extension_rmvb.png");
                        public static readonly string file_extension_rtf_png = Url("file_extension_rtf.png");
                        public static readonly string file_extension_sea_png = Url("file_extension_sea.png");
                        public static readonly string file_extension_ses_png = Url("file_extension_ses.png");
                        public static readonly string file_extension_sit_png = Url("file_extension_sit.png");
                        public static readonly string file_extension_sitx_png = Url("file_extension_sitx.png");
                        public static readonly string file_extension_ss_png = Url("file_extension_ss.png");
                        public static readonly string file_extension_swf_png = Url("file_extension_swf.png");
                        public static readonly string file_extension_tgz_png = Url("file_extension_tgz.png");
                        public static readonly string file_extension_thm_png = Url("file_extension_thm.png");
                        public static readonly string file_extension_tif_png = Url("file_extension_tif.png");
                        public static readonly string file_extension_tmp_png = Url("file_extension_tmp.png");
                        public static readonly string file_extension_torrent_png = Url("file_extension_torrent.png");
                        public static readonly string file_extension_ttf_png = Url("file_extension_ttf.png");
                        public static readonly string file_extension_txt_png = Url("file_extension_txt.png");
                        public static readonly string file_extension_vcd_png = Url("file_extension_vcd.png");
                        public static readonly string file_extension_vob_png = Url("file_extension_vob.png");
                        public static readonly string file_extension_wav_png = Url("file_extension_wav.png");
                        public static readonly string file_extension_wma_png = Url("file_extension_wma.png");
                        public static readonly string file_extension_wmv_png = Url("file_extension_wmv.png");
                        public static readonly string file_extension_wps_png = Url("file_extension_wps.png");
                        public static readonly string file_extension_xls_png = Url("file_extension_xls.png");
                        public static readonly string file_extension_xpi_png = Url("file_extension_xpi.png");
                        public static readonly string file_extension_zip_png = Url("file_extension_zip.png");
                        public static readonly string unknown_png = Url("unknown.png");
                    }
                
                    public static readonly string file_extension_3gp_png = Url("file_extension_3gp.png");
                    public static readonly string file_extension_7z_png = Url("file_extension_7z.png");
                    public static readonly string file_extension_ace_png = Url("file_extension_ace.png");
                    public static readonly string file_extension_ai_png = Url("file_extension_ai.png");
                    public static readonly string file_extension_aif_png = Url("file_extension_aif.png");
                    public static readonly string file_extension_aiff_png = Url("file_extension_aiff.png");
                    public static readonly string file_extension_amr_png = Url("file_extension_amr.png");
                    public static readonly string file_extension_asf_png = Url("file_extension_asf.png");
                    public static readonly string file_extension_asx_png = Url("file_extension_asx.png");
                    public static readonly string file_extension_bat_png = Url("file_extension_bat.png");
                    public static readonly string file_extension_bin_png = Url("file_extension_bin.png");
                    public static readonly string file_extension_bmp_png = Url("file_extension_bmp.png");
                    public static readonly string file_extension_bup_png = Url("file_extension_bup.png");
                    public static readonly string file_extension_cab_png = Url("file_extension_cab.png");
                    public static readonly string file_extension_cbr_png = Url("file_extension_cbr.png");
                    public static readonly string file_extension_cda_png = Url("file_extension_cda.png");
                    public static readonly string file_extension_cdl_png = Url("file_extension_cdl.png");
                    public static readonly string file_extension_cdr_png = Url("file_extension_cdr.png");
                    public static readonly string file_extension_chm_png = Url("file_extension_chm.png");
                    public static readonly string file_extension_dat_png = Url("file_extension_dat.png");
                    public static readonly string file_extension_divx_png = Url("file_extension_divx.png");
                    public static readonly string file_extension_dll_png = Url("file_extension_dll.png");
                    public static readonly string file_extension_dmg_png = Url("file_extension_dmg.png");
                    public static readonly string file_extension_doc_png = Url("file_extension_doc.png");
                    public static readonly string file_extension_dss_png = Url("file_extension_dss.png");
                    public static readonly string file_extension_dvf_png = Url("file_extension_dvf.png");
                    public static readonly string file_extension_dwg_png = Url("file_extension_dwg.png");
                    public static readonly string file_extension_eml_png = Url("file_extension_eml.png");
                    public static readonly string file_extension_eps_png = Url("file_extension_eps.png");
                    public static readonly string file_extension_exe_png = Url("file_extension_exe.png");
                    public static readonly string file_extension_fla_png = Url("file_extension_fla.png");
                    public static readonly string file_extension_flv_png = Url("file_extension_flv.png");
                    public static readonly string file_extension_gif_png = Url("file_extension_gif.png");
                    public static readonly string file_extension_gz_png = Url("file_extension_gz.png");
                    public static readonly string file_extension_hqx_png = Url("file_extension_hqx.png");
                    public static readonly string file_extension_htm_png = Url("file_extension_htm.png");
                    public static readonly string file_extension_html_png = Url("file_extension_html.png");
                    public static readonly string file_extension_ifo_png = Url("file_extension_ifo.png");
                    public static readonly string file_extension_indd_png = Url("file_extension_indd.png");
                    public static readonly string file_extension_iso_png = Url("file_extension_iso.png");
                    public static readonly string file_extension_jar_png = Url("file_extension_jar.png");
                    public static readonly string file_extension_jpeg_png = Url("file_extension_jpeg.png");
                    public static readonly string file_extension_jpg_png = Url("file_extension_jpg.png");
                    public static readonly string file_extension_lnk_png = Url("file_extension_lnk.png");
                    public static readonly string file_extension_log_png = Url("file_extension_log.png");
                    public static readonly string file_extension_m4a_png = Url("file_extension_m4a.png");
                    public static readonly string file_extension_m4b_png = Url("file_extension_m4b.png");
                    public static readonly string file_extension_m4p_png = Url("file_extension_m4p.png");
                    public static readonly string file_extension_m4v_png = Url("file_extension_m4v.png");
                    public static readonly string file_extension_mcd_png = Url("file_extension_mcd.png");
                    public static readonly string file_extension_mdb_png = Url("file_extension_mdb.png");
                    public static readonly string file_extension_mid_png = Url("file_extension_mid.png");
                    public static readonly string file_extension_mov_png = Url("file_extension_mov.png");
                    public static readonly string file_extension_mp2_png = Url("file_extension_mp2.png");
                    public static readonly string file_extension_mp3_png = Url("file_extension_mp3.png");
                    public static readonly string file_extension_mp4_png = Url("file_extension_mp4.png");
                    public static readonly string file_extension_mpeg_png = Url("file_extension_mpeg.png");
                    public static readonly string file_extension_mpg_png = Url("file_extension_mpg.png");
                    public static readonly string file_extension_msi_png = Url("file_extension_msi.png");
                    public static readonly string file_extension_mswmm_png = Url("file_extension_mswmm.png");
                    public static readonly string file_extension_ogg_png = Url("file_extension_ogg.png");
                    public static readonly string file_extension_pdf_png = Url("file_extension_pdf.png");
                    public static readonly string file_extension_png_png = Url("file_extension_png.png");
                    public static readonly string file_extension_pps_png = Url("file_extension_pps.png");
                    public static readonly string file_extension_ps_png = Url("file_extension_ps.png");
                    public static readonly string file_extension_psd_png = Url("file_extension_psd.png");
                    public static readonly string file_extension_pst_png = Url("file_extension_pst.png");
                    public static readonly string file_extension_ptb_png = Url("file_extension_ptb.png");
                    public static readonly string file_extension_pub_png = Url("file_extension_pub.png");
                    public static readonly string file_extension_qbb_png = Url("file_extension_qbb.png");
                    public static readonly string file_extension_qbw_png = Url("file_extension_qbw.png");
                    public static readonly string file_extension_qxd_png = Url("file_extension_qxd.png");
                    public static readonly string file_extension_ram_png = Url("file_extension_ram.png");
                    public static readonly string file_extension_rar_png = Url("file_extension_rar.png");
                    public static readonly string file_extension_rm_png = Url("file_extension_rm.png");
                    public static readonly string file_extension_rmvb_png = Url("file_extension_rmvb.png");
                    public static readonly string file_extension_rtf_png = Url("file_extension_rtf.png");
                    public static readonly string file_extension_sea_png = Url("file_extension_sea.png");
                    public static readonly string file_extension_ses_png = Url("file_extension_ses.png");
                    public static readonly string file_extension_sit_png = Url("file_extension_sit.png");
                    public static readonly string file_extension_sitx_png = Url("file_extension_sitx.png");
                    public static readonly string file_extension_ss_png = Url("file_extension_ss.png");
                    public static readonly string file_extension_swf_png = Url("file_extension_swf.png");
                    public static readonly string file_extension_tgz_png = Url("file_extension_tgz.png");
                    public static readonly string file_extension_thm_png = Url("file_extension_thm.png");
                    public static readonly string file_extension_tif_png = Url("file_extension_tif.png");
                    public static readonly string file_extension_tmp_png = Url("file_extension_tmp.png");
                    public static readonly string file_extension_torrent_png = Url("file_extension_torrent.png");
                    public static readonly string file_extension_ttf_png = Url("file_extension_ttf.png");
                    public static readonly string file_extension_txt_png = Url("file_extension_txt.png");
                    public static readonly string file_extension_vcd_png = Url("file_extension_vcd.png");
                    public static readonly string file_extension_vob_png = Url("file_extension_vob.png");
                    public static readonly string file_extension_wav_png = Url("file_extension_wav.png");
                    public static readonly string file_extension_wma_png = Url("file_extension_wma.png");
                    public static readonly string file_extension_wmv_png = Url("file_extension_wmv.png");
                    public static readonly string file_extension_wps_png = Url("file_extension_wps.png");
                    public static readonly string file_extension_xls_png = Url("file_extension_xls.png");
                    public static readonly string file_extension_xpi_png = Url("file_extension_xpi.png");
                    public static readonly string file_extension_zip_png = Url("file_extension_zip.png");
                    public static readonly string unknown_png = Url("unknown.png");
                }
            
                public static readonly string find_png = Url("find.png");
                public static readonly string folder_add_png = Url("folder-add.png");
                public static readonly string folder_delete_png = Url("folder-delete.png");
                public static readonly string folder_download_png = Url("folder-download.png");
                public static readonly string folder_green_png = Url("folder-green.png");
                public static readonly string folder_opened_png = Url("folder-opened.png");
                public static readonly string folder_png = Url("folder.png");
                public static readonly string loading_dir_gif = Url("loading-dir.gif");
                public static readonly string loading_gif = Url("loading.gif");
                public static readonly string paste_png = Url("paste.png");
                public static readonly string preview_png = Url("preview.png");
                public static readonly string remove_upload___Copy_png = Url("remove-upload - Copy.png");
                public static readonly string remove_upload_png = Url("remove-upload.png");
                public static readonly string rename_png = Url("rename.png");
                public static readonly string search_png = Url("search.png");
                public static readonly string select_png = Url("select.png");
                public static readonly string sprite_png = Url("sprite.png");
                public static readonly string stripes_reverse_gif = Url("stripes-reverse.gif");
                public static readonly string stripes_gif = Url("stripes.gif");
                public static readonly string upload_big_png = Url("upload-big.png");
                public static readonly string view_list_png = Url("view-list.png");
                public static readonly string view_tile_png = Url("view-tile.png");
            }
        
            public static readonly string index_html = Url("index.html");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class js {
                public const string UrlPath = "~/Scripts/RoxyFileManager/js";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string custom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/custom.min.js") ? Url("custom.min.js") : Url("custom.js");
                public static readonly string directory_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/directory.min.js") ? Url("directory.min.js") : Url("directory.js");
                public static readonly string file_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/file.min.js") ? Url("file.min.js") : Url("file.js");
                public static readonly string filetypes_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/filetypes.min.js") ? Url("filetypes.min.js") : Url("filetypes.js");
                public static readonly string jquery_1_10_2_min_js = Url("jquery-1.10.2.min.js");
                public static readonly string jquery_1_11_1_min_js = Url("jquery-1.11.1.min.js");
                public static readonly string jquery_2_1_1_min_js = Url("jquery-2.1.1.min.js");
                public static readonly string jquery_dateFormat_min_js = Url("jquery-dateFormat.min.js");
                public static readonly string jquery_ui_1_10_4_custom_min_js = Url("jquery-ui-1.10.4.custom.min.js");
                public static readonly string main_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/main.min.js") ? Url("main.min.js") : Url("main.js");
                public static readonly string main_min_js = Url("main.min.js");
                public static readonly string mini_main_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/mini-main.min.js") ? Url("mini-main.min.js") : Url("mini-main.js");
                public static readonly string tiny_mce_popup_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tiny_mce_popup.min.js") ? Url("tiny_mce_popup.min.js") : Url("tiny_mce_popup.js");
                public static readonly string utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/utils.min.js") ? Url("utils.min.js") : Url("utils.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class lang {
                public const string UrlPath = "~/Scripts/RoxyFileManager/lang";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string bg_json = Url("bg.json");
                public static readonly string cs_json = Url("cs.json");
                public static readonly string cs1_json = Url("cs1.json");
                public static readonly string de_json = Url("de.json");
                public static readonly string en_json = Url("en.json");
                public static readonly string es_json = Url("es.json");
                public static readonly string fa_json = Url("fa.json");
                public static readonly string fr_json = Url("fr.json");
                public static readonly string hu_json = Url("hu.json");
                public static readonly string it_json = Url("it.json");
                public static readonly string pl_json = Url("pl.json");
                public static readonly string pt_json = Url("pt.json");
            }
        
            public static readonly string Tinymce_html = Url("Tinymce.html");
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        public const string UrlPath = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Admin {
            public const string UrlPath = "~/Content/Admin";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            public static readonly string font_awesome_min_css = Url("font-awesome.min.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class icons {
                public const string UrlPath = "~/Content/Admin/icons";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string icons_dev_svg = Url("icons.dev.svg");
                public static readonly string icons_eot = Url("icons.eot");
                public static readonly string icons_svg = Url("icons.svg");
                public static readonly string icons_ttf = Url("icons.ttf");
                public static readonly string icons_woff = Url("icons.woff");
            }
        
            public static readonly string icons_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/icons.min.css") ? Url("icons.min.css") : Url("icons.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class images {
                public const string UrlPath = "~/Content/Admin/images";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string _DS_Store = Url(".DS_Store");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class colorpicker {
                    public const string UrlPath = "~/Content/Admin/images/colorpicker";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string alpha_png = Url("alpha.png");
                    public static readonly string hue_png = Url("hue.png");
                    public static readonly string saturation_png = Url("saturation.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class flags {
                    public const string UrlPath = "~/Content/Admin/images/flags";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string _DS_Store = Url(".DS_Store");
                    public static readonly string english_png = Url("english.png");
                    public static readonly string german_png = Url("german.png");
                    public static readonly string hungarian_png = Url("hungarian.png");
                    public static readonly string spanish_png = Url("spanish.png");
                    public static readonly string ukrainian_png = Url("ukrainian.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class forms {
                    public const string UrlPath = "~/Content/Admin/images/forms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string add_files_png = Url("add_files.png");
                    public static readonly string check_png = Url("check.png");
                    public static readonly string check_white_png = Url("check_white.png");
                    public static readonly string checkbox_png = Url("checkbox.png");
                    public static readonly string checkbox_blue_png = Url("checkbox_blue.png");
                    public static readonly string checkbox_dark_png = Url("checkbox_dark.png");
                    public static readonly string checkbox_green_png = Url("checkbox_green.png");
                    public static readonly string checkbox_red_png = Url("checkbox_red.png");
                    public static readonly string choice_png = Url("choice.png");
                    public static readonly string choice_white_png = Url("choice_white.png");
                    public static readonly string clear_results_png = Url("clear_results.png");
                    public static readonly string dropdown_arrow_down_png = Url("dropdown_arrow_down.png");
                    public static readonly string dropdown_arrow_up_png = Url("dropdown_arrow_up.png");
                    public static readonly string radio_png = Url("radio.png");
                    public static readonly string radio_blue_png = Url("radio_blue.png");
                    public static readonly string radio_dark_png = Url("radio_dark.png");
                    public static readonly string radio_green_png = Url("radio_green.png");
                    public static readonly string radio_red_png = Url("radio_red.png");
                    public static readonly string select_multiple_add_png = Url("select_multiple_add.png");
                    public static readonly string spinner_bottom_png = Url("spinner_bottom.png");
                    public static readonly string spinner_top_png = Url("spinner_top.png");
                    public static readonly string switch_handler_png = Url("switch_handler.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class @interface {
                    public const string UrlPath = "~/Content/Admin/images/interface";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string _DS_Store = Url(".DS_Store");
                    public static readonly string arrow_left_png = Url("arrow_left.png");
                    public static readonly string arrow_right_png = Url("arrow_right.png");
                    public static readonly string breadcrumb_home_png = Url("breadcrumb_home.png");
                    public static readonly string datepicker_trigger_png = Url("datepicker_trigger.png");
                    public static readonly string filter_png = Url("filter.png");
                    public static readonly string lightbox_overlay_png = Url("lightbox_overlay.png");
                    public static readonly string loader_gif = Url("loader.gif");
                    public static readonly string minus_png = Url("minus.png");
                    public static readonly string nav_arrow_left_png = Url("nav_arrow_left.png");
                    public static readonly string nav_arrow_right_png = Url("nav_arrow_right.png");
                    public static readonly string plupload_done_png = Url("plupload_done.png");
                    public static readonly string plupload_error_png = Url("plupload_error.png");
                    public static readonly string plupload_remove_png = Url("plupload_remove.png");
                    public static readonly string plupload_title_png = Url("plupload_title.png");
                    public static readonly string plus_png = Url("plus.png");
                    public static readonly string slider_handle_png = Url("slider_handle.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class tables {
                        public const string UrlPath = "~/Content/Admin/images/interface/tables";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string filter_png = Url("filter.png");
                        public static readonly string sort_asc_png = Url("sort_asc.png");
                        public static readonly string sort_asc_disabled_png = Url("sort_asc_disabled.png");
                        public static readonly string sort_both_png = Url("sort_both.png");
                        public static readonly string sort_desc_png = Url("sort_desc.png");
                        public static readonly string sort_desc_disabled_png = Url("sort_desc_disabled.png");
                    }
                
                    public static readonly string typing_gif = Url("typing.gif");
                    public static readonly string user_arrow_default_png = Url("user_arrow_default.png");
                    public static readonly string user_arrow_hover_png = Url("user_arrow_hover.png");
                    public static readonly string user_menu_arrow_png = Url("user_menu_arrow.png");
                    public static readonly string vertical_arrows_png = Url("vertical_arrows.png");
                    public static readonly string zoom_png = Url("zoom.png");
                }
            
                public static readonly string logo_png = Url("logo.png");
                public static readonly string logo_dark_png = Url("logo_dark.png");
            }
        
            public static readonly string londinium_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/londinium-theme.min.css") ? Url("londinium-theme.min.css") : Url("londinium-theme.css");
            public static readonly string PagedList_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/PagedList.min.css") ? Url("PagedList.min.css") : Url("PagedList.css");
            public static readonly string PersianDatePicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/PersianDatePicker.min.css") ? Url("PersianDatePicker.min.css") : Url("PersianDatePicker.css");
            public static readonly string PersianDatePicker_min_css = Url("PersianDatePicker.min.css");
            public static readonly string styles_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/styles.min.css") ? Url("styles.min.css") : Url("styles.css");
        }
    
        public static readonly string bootstrap_rtl_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-rtl.min.css") ? Url("bootstrap-rtl.min.css") : Url("bootstrap-rtl.css");
        public static readonly string bootstrap_rtl_min_css = Url("bootstrap-rtl.min.css");
        public static readonly string bootstrap_theme_rtl_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-theme-rtl.min.css") ? Url("bootstrap-theme-rtl.min.css") : Url("bootstrap-theme-rtl.css");
        public static readonly string bootstrap_theme_rtl_min_css = Url("bootstrap-theme-rtl.min.css");
        public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css") : Url("bootstrap-theme.css");
        public static readonly string bootstrap_theme_css_map = Url("bootstrap-theme.css.map");
        public static readonly string bootstrap_theme_min_css = Url("bootstrap-theme.min.css");
        public static readonly string bootstrap_theme_min_css_map = Url("bootstrap-theme.min.css.map");
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
        public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        public static readonly string bootstrap_min_css_map = Url("bootstrap.min.css.map");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class error {
            public const string UrlPath = "~/Content/error";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string fonts_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fonts.min.css") ? Url("fonts.min.css") : Url("fonts.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class img {
                public const string UrlPath = "~/Content/error/img";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string background_png = Url("background.png");
                public static readonly string four_zero_four_png = Url("four-zero-four.png");
                public static readonly string menu_bg_png = Url("menu_bg.png");
                public static readonly string social_icon_png = Url("social-icon.png");
            }
        
            public static readonly string normalize_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/normalize.min.css") ? Url("normalize.min.css") : Url("normalize.css");
            public static readonly string responsive_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/responsive.min.css") ? Url("responsive.min.css") : Url("responsive.css");
            public static readonly string style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/style.min.css") ? Url("style.min.css") : Url("style.css");
        }
    
        public static readonly string font_awesome_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/font-awesome.min.css") ? Url("font-awesome.min.css") : Url("font-awesome.css");
        public static readonly string font_awesome_min_css = Url("font-awesome.min.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Loom {
            public const string UrlPath = "~/Content/Loom";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string fontello_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fontello.min.css") ? Url("fontello.min.css") : Url("fontello.css");
            public static readonly string green_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/green.min.css") ? Url("green.min.css") : Url("green.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class images {
                public const string UrlPath = "~/Content/Loom/images";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string favicon_png = Url("favicon.png");
                public static readonly string logo_png = Url("logo.png");
                public static readonly string logo_2x_png = Url("logo@2x.png");
                public static readonly string parallax1_jpg = Url("parallax1.jpg");
                public static readonly string parallax2_jpg = Url("parallax2.jpg");
                public static readonly string slider_transparent_png = Url("slider-transparent.png");
                public static readonly string software_developer_vs_software_engineer_jpg = Url("software-developer-vs-software-engineer.jpg");
                public static readonly string softwer_eng_png = Url("softwer-eng.png");
                public static readonly string timer_png = Url("timer.png");
                public static readonly string u1_jpg = Url("u1.jpg");
            }
        
            public static readonly string owl_carousel_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/owl.carousel.min.css") ? Url("owl.carousel.min.css") : Url("owl.carousel.css");
            public static readonly string picons_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/picons.min.css") ? Url("picons.min.css") : Url("picons.css");
            public static readonly string prettify_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/prettify.min.css") ? Url("prettify.min.css") : Url("prettify.css");
            public static readonly string settings_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/settings.min.css") ? Url("settings.min.css") : Url("settings.css");
            public static readonly string socialcss_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/socialcss.min.css") ? Url("socialcss.min.css") : Url("socialcss.css");
            public static readonly string style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/style.min.css") ? Url("style.min.css") : Url("style.css");
        }
    
        public static readonly string PagedList_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/PagedList.min.css") ? Url("PagedList.min.css") : Url("PagedList.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class themes {
            public const string UrlPath = "~/Content/themes";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class @base {
                public const string UrlPath = "~/Content/themes/base";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                public static readonly string all_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/all.min.css") ? Url("all.min.css") : Url("all.css");
                public static readonly string autocomplete_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/autocomplete.min.css") ? Url("autocomplete.min.css") : Url("autocomplete.css");
                public static readonly string base_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/base.min.css") ? Url("base.min.css") : Url("base.css");
                public static readonly string button_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/button.min.css") ? Url("button.min.css") : Url("button.css");
                public static readonly string core_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/core.min.css") ? Url("core.min.css") : Url("core.css");
                public static readonly string datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/datepicker.min.css") ? Url("datepicker.min.css") : Url("datepicker.css");
                public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                public static readonly string draggable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/draggable.min.css") ? Url("draggable.min.css") : Url("draggable.css");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    public const string UrlPath = "~/Content/themes/base/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                    public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                    public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                    public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                    public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                    public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                    public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                    public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                    public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                    public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                    public static readonly string ui_icons_444444_256x240_png = Url("ui-icons_444444_256x240.png");
                    public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                    public static readonly string ui_icons_555555_256x240_png = Url("ui-icons_555555_256x240.png");
                    public static readonly string ui_icons_777620_256x240_png = Url("ui-icons_777620_256x240.png");
                    public static readonly string ui_icons_777777_256x240_png = Url("ui-icons_777777_256x240.png");
                    public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                    public static readonly string ui_icons_cc0000_256x240_png = Url("ui-icons_cc0000_256x240.png");
                    public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                    public static readonly string ui_icons_ffffff_256x240_png = Url("ui-icons_ffffff_256x240.png");
                }
            
                public static readonly string jquery_ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-ui.min.css") ? Url("jquery-ui.min.css") : Url("jquery-ui.css");
                public static readonly string jquery_ui_min_css = Url("jquery-ui.min.css");
                public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                public static readonly string resizable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/resizable.min.css") ? Url("resizable.min.css") : Url("resizable.css");
                public static readonly string selectable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/selectable.min.css") ? Url("selectable.min.css") : Url("selectable.css");
                public static readonly string selectmenu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/selectmenu.min.css") ? Url("selectmenu.min.css") : Url("selectmenu.css");
                public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                public static readonly string sortable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/sortable.min.css") ? Url("sortable.min.css") : Url("sortable.css");
                public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                public static readonly string theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/theme.min.css") ? Url("theme.min.css") : Url("theme.css");
                public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
            }
        
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class Admin 
            {
                public static partial class charts 
                {
                    public static partial class full 
                    {
                        public static class Assets
                        {
                            public const string animated_1_js = "~/Scripts/Admin/charts/full/animated_1.js"; 
                            public const string animated_2_js = "~/Scripts/Admin/charts/full/animated_2.js"; 
                            public const string animated_3_js = "~/Scripts/Admin/charts/full/animated_3.js"; 
                            public const string auto_empty_js = "~/Scripts/Admin/charts/full/auto_empty.js"; 
                            public const string auto_filled_js = "~/Scripts/Admin/charts/full/auto_filled.js"; 
                            public const string donut_js = "~/Scripts/Admin/charts/full/donut.js"; 
                            public const string horizontal_bars_js = "~/Scripts/Admin/charts/full/horizontal_bars.js"; 
                            public const string multiple_axes_js = "~/Scripts/Admin/charts/full/multiple_axes.js"; 
                            public const string pie_js = "~/Scripts/Admin/charts/full/pie.js"; 
                            public const string pie_full_js = "~/Scripts/Admin/charts/full/pie_full.js"; 
                            public const string simple_graph_js = "~/Scripts/Admin/charts/full/simple_graph.js"; 
                            public const string vertical_bars_js = "~/Scripts/Admin/charts/full/vertical_bars.js"; 
                        }
                    }
                    public static partial class widgets 
                    {
                        public static class Assets
                        {
                            public const string filled_blue_js = "~/Scripts/Admin/charts/widgets/filled_blue.js"; 
                            public const string filled_green_js = "~/Scripts/Admin/charts/widgets/filled_green.js"; 
                            public const string filled_red_js = "~/Scripts/Admin/charts/widgets/filled_red.js"; 
                            public const string updating_1_js = "~/Scripts/Admin/charts/widgets/updating_1.js"; 
                            public const string updating_2_js = "~/Scripts/Admin/charts/widgets/updating_2.js"; 
                            public const string updating_3_js = "~/Scripts/Admin/charts/widgets/updating_3.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class globalize 
                {
                    public static class Assets
                    {
                        public const string globalize_culture_de_DE_js = "~/Scripts/Admin/globalize/globalize.culture.de-DE.js"; 
                        public const string globalize_culture_ja_JP_js = "~/Scripts/Admin/globalize/globalize.culture.ja-JP.js"; 
                        public const string globalize_js = "~/Scripts/Admin/globalize/globalize.js"; 
                    }
                }
                public static partial class plugins 
                {
                    public static partial class admininterface 
                    {
                        public static class Assets
                        {
                            public const string collapsible_min_js = "~/Scripts/Admin/plugins/admininterface/collapsible.min.js"; 
                            public const string colorpicker_js = "~/Scripts/Admin/plugins/admininterface/colorpicker.js"; 
                            public const string datatables_min_js = "~/Scripts/Admin/plugins/admininterface/datatables.min.js"; 
                            public const string daterangepicker_js = "~/Scripts/Admin/plugins/admininterface/daterangepicker.js"; 
                            public const string fancybox_min_js = "~/Scripts/Admin/plugins/admininterface/fancybox.min.js"; 
                            public const string fullcalendar_min_js = "~/Scripts/Admin/plugins/admininterface/fullcalendar.min.js"; 
                            public const string hover_dropdown_min_js = "~/Scripts/Admin/plugins/admininterface/hover_dropdown.min.js"; 
                            public const string jgrowl_min_js = "~/Scripts/Admin/plugins/admininterface/jgrowl.min.js"; 
                            public const string moment_js = "~/Scripts/Admin/plugins/admininterface/moment.js"; 
                            public const string mousewheel_js = "~/Scripts/Admin/plugins/admininterface/mousewheel.js"; 
                            public const string prettify_js = "~/Scripts/Admin/plugins/admininterface/prettify.js"; 
                            public const string tabletools_min_js = "~/Scripts/Admin/plugins/admininterface/tabletools.min.js"; 
                            public const string timepicker_min_js = "~/Scripts/Admin/plugins/admininterface/timepicker.min.js"; 
                        }
                    }
                    public static partial class charts 
                    {
                        public static class Assets
                        {
                            public const string excanvas_min_js = "~/Scripts/Admin/plugins/charts/excanvas.min.js"; 
                            public const string flot_animator_min_js = "~/Scripts/Admin/plugins/charts/flot.animator.min.js"; 
                            public const string flot_js = "~/Scripts/Admin/plugins/charts/flot.js"; 
                            public const string flot_orderbars_js = "~/Scripts/Admin/plugins/charts/flot.orderbars.js"; 
                            public const string flot_pie_js = "~/Scripts/Admin/plugins/charts/flot.pie.js"; 
                            public const string flot_resize_min_js = "~/Scripts/Admin/plugins/charts/flot.resize.min.js"; 
                            public const string flot_time_js = "~/Scripts/Admin/plugins/charts/flot.time.js"; 
                            public const string sparkline_min_js = "~/Scripts/Admin/plugins/charts/sparkline.min.js"; 
                        }
                    }
                    public static partial class forms 
                    {
                        public static partial class uploader 
                        {
                            public static class Assets
                            {
                                public const string plupload_full_min_js = "~/Scripts/Admin/plugins/forms/uploader/plupload.full.min.js"; 
                                public const string plupload_queue_min_js = "~/Scripts/Admin/plugins/forms/uploader/plupload.queue.min.js"; 
                            }
                        }
                        public static partial class wysihtml5 
                        {
                            public static class Assets
                            {
                                public const string toolbar_js = "~/Scripts/Admin/plugins/forms/wysihtml5/toolbar.js"; 
                                public const string wysihtml5_min_js = "~/Scripts/Admin/plugins/forms/wysihtml5/wysihtml5.min.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string autosize_js = "~/Scripts/Admin/plugins/forms/autosize.js"; 
                            public const string inputlimit_min_js = "~/Scripts/Admin/plugins/forms/inputlimit.min.js"; 
                            public const string inputmask_js = "~/Scripts/Admin/plugins/forms/inputmask.js"; 
                            public const string listbox_js = "~/Scripts/Admin/plugins/forms/listbox.js"; 
                            public const string multiselect_js = "~/Scripts/Admin/plugins/forms/multiselect.js"; 
                            public const string select2_min_js = "~/Scripts/Admin/plugins/forms/select2.min.js"; 
                            public const string switch_min_js = "~/Scripts/Admin/plugins/forms/switch.min.js"; 
                            public const string tags_min_js = "~/Scripts/Admin/plugins/forms/tags.min.js"; 
                            public const string uniform_min_js = "~/Scripts/Admin/plugins/forms/uniform.min.js"; 
                            public const string validate_min_js = "~/Scripts/Admin/plugins/forms/validate.min.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string application_js = "~/Scripts/Admin/application.js"; 
                    public const string application_blank_js = "~/Scripts/Admin/application_blank.js"; 
                    public const string bootstrap_min_js = "~/Scripts/Admin/bootstrap.min.js"; 
                    public const string common_scripts_js = "~/Scripts/Admin/common.scripts.js"; 
                    public const string jqueryval_default_js = "~/Scripts/Admin/jqueryval.default.js"; 
                }
            }
            public static partial class ckeditor 
            {
                public static partial class adapters 
                {
                    public static class Assets
                    {
                        public const string jquery_js = "~/Scripts/ckeditor/adapters/jquery.js"; 
                    }
                }
                public static partial class images 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class lang 
                {
                    public static class Assets
                    {
                        public const string _languages_js = "~/Scripts/ckeditor/lang/_languages.js"; 
                        public const string af_js = "~/Scripts/ckeditor/lang/af.js"; 
                        public const string ar_js = "~/Scripts/ckeditor/lang/ar.js"; 
                        public const string bg_js = "~/Scripts/ckeditor/lang/bg.js"; 
                        public const string bn_js = "~/Scripts/ckeditor/lang/bn.js"; 
                        public const string bs_js = "~/Scripts/ckeditor/lang/bs.js"; 
                        public const string ca_js = "~/Scripts/ckeditor/lang/ca.js"; 
                        public const string cs_js = "~/Scripts/ckeditor/lang/cs.js"; 
                        public const string cy_js = "~/Scripts/ckeditor/lang/cy.js"; 
                        public const string da_js = "~/Scripts/ckeditor/lang/da.js"; 
                        public const string de_js = "~/Scripts/ckeditor/lang/de.js"; 
                        public const string el_js = "~/Scripts/ckeditor/lang/el.js"; 
                        public const string en_au_js = "~/Scripts/ckeditor/lang/en-au.js"; 
                        public const string en_ca_js = "~/Scripts/ckeditor/lang/en-ca.js"; 
                        public const string en_gb_js = "~/Scripts/ckeditor/lang/en-gb.js"; 
                        public const string en_js = "~/Scripts/ckeditor/lang/en.js"; 
                        public const string eo_js = "~/Scripts/ckeditor/lang/eo.js"; 
                        public const string es_js = "~/Scripts/ckeditor/lang/es.js"; 
                        public const string et_js = "~/Scripts/ckeditor/lang/et.js"; 
                        public const string eu_js = "~/Scripts/ckeditor/lang/eu.js"; 
                        public const string fa_js = "~/Scripts/ckeditor/lang/fa.js"; 
                        public const string fi_js = "~/Scripts/ckeditor/lang/fi.js"; 
                        public const string fo_js = "~/Scripts/ckeditor/lang/fo.js"; 
                        public const string fr_ca_js = "~/Scripts/ckeditor/lang/fr-ca.js"; 
                        public const string fr_js = "~/Scripts/ckeditor/lang/fr.js"; 
                        public const string gl_js = "~/Scripts/ckeditor/lang/gl.js"; 
                        public const string gu_js = "~/Scripts/ckeditor/lang/gu.js"; 
                        public const string he_js = "~/Scripts/ckeditor/lang/he.js"; 
                        public const string hi_js = "~/Scripts/ckeditor/lang/hi.js"; 
                        public const string hr_js = "~/Scripts/ckeditor/lang/hr.js"; 
                        public const string hu_js = "~/Scripts/ckeditor/lang/hu.js"; 
                        public const string id_js = "~/Scripts/ckeditor/lang/id.js"; 
                        public const string is_js = "~/Scripts/ckeditor/lang/is.js"; 
                        public const string it_js = "~/Scripts/ckeditor/lang/it.js"; 
                        public const string ja_js = "~/Scripts/ckeditor/lang/ja.js"; 
                        public const string ka_js = "~/Scripts/ckeditor/lang/ka.js"; 
                        public const string km_js = "~/Scripts/ckeditor/lang/km.js"; 
                        public const string ko_js = "~/Scripts/ckeditor/lang/ko.js"; 
                        public const string lt_js = "~/Scripts/ckeditor/lang/lt.js"; 
                        public const string lv_js = "~/Scripts/ckeditor/lang/lv.js"; 
                        public const string mk_js = "~/Scripts/ckeditor/lang/mk.js"; 
                        public const string mn_js = "~/Scripts/ckeditor/lang/mn.js"; 
                        public const string ms_js = "~/Scripts/ckeditor/lang/ms.js"; 
                        public const string nb_js = "~/Scripts/ckeditor/lang/nb.js"; 
                        public const string nl_js = "~/Scripts/ckeditor/lang/nl.js"; 
                        public const string no_js = "~/Scripts/ckeditor/lang/no.js"; 
                        public const string pl_js = "~/Scripts/ckeditor/lang/pl.js"; 
                        public const string pt_br_js = "~/Scripts/ckeditor/lang/pt-br.js"; 
                        public const string pt_js = "~/Scripts/ckeditor/lang/pt.js"; 
                        public const string ro_js = "~/Scripts/ckeditor/lang/ro.js"; 
                        public const string ru_js = "~/Scripts/ckeditor/lang/ru.js"; 
                        public const string sk_js = "~/Scripts/ckeditor/lang/sk.js"; 
                        public const string sl_js = "~/Scripts/ckeditor/lang/sl.js"; 
                        public const string sr_latn_js = "~/Scripts/ckeditor/lang/sr-latn.js"; 
                        public const string sr_js = "~/Scripts/ckeditor/lang/sr.js"; 
                        public const string sv_js = "~/Scripts/ckeditor/lang/sv.js"; 
                        public const string th_js = "~/Scripts/ckeditor/lang/th.js"; 
                        public const string tr_js = "~/Scripts/ckeditor/lang/tr.js"; 
                        public const string ug_js = "~/Scripts/ckeditor/lang/ug.js"; 
                        public const string uk_js = "~/Scripts/ckeditor/lang/uk.js"; 
                        public const string vi_js = "~/Scripts/ckeditor/lang/vi.js"; 
                        public const string zh_cn_js = "~/Scripts/ckeditor/lang/zh-cn.js"; 
                        public const string zh_js = "~/Scripts/ckeditor/lang/zh.js"; 
                    }
                }
                public static partial class plugins 
                {
                    public static partial class a11yhelp 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string a11yhelp_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/a11yhelp.js"; 
                            }
                        }
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string cs_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/cs.js"; 
                                public const string cy_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/cy.js"; 
                                public const string da_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/da.js"; 
                                public const string de_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/de.js"; 
                                public const string el_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/el.js"; 
                                public const string en_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/en.js"; 
                                public const string eo_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/eo.js"; 
                                public const string fa_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/fa.js"; 
                                public const string fi_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/fi.js"; 
                                public const string fr_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/fr.js"; 
                                public const string gu_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/gu.js"; 
                                public const string he_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/he.js"; 
                                public const string it_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/it.js"; 
                                public const string mk_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/mk.js"; 
                                public const string nb_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/nb.js"; 
                                public const string nl_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/nl.js"; 
                                public const string no_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/no.js"; 
                                public const string pt_br_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/pt-br.js"; 
                                public const string ro_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/ro.js"; 
                                public const string tr_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/tr.js"; 
                                public const string ug_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/ug.js"; 
                                public const string vi_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/vi.js"; 
                                public const string zh_cn_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/zh-cn.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class about 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string about_js = "~/Scripts/ckeditor/plugins/about/dialogs/about.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class adobeair 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/adobeair/plugin.js"; 
                        }
                    }
                    public static partial class ajax 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/ajax/plugin.js"; 
                        }
                    }
                    public static partial class autogrow 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/autogrow/plugin.js"; 
                        }
                    }
                    public static partial class bbcode 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/bbcode/plugin.js"; 
                        }
                    }
                    public static partial class clipboard 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string paste_js = "~/Scripts/ckeditor/plugins/clipboard/dialogs/paste.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class colordialog 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string colordialog_js = "~/Scripts/ckeditor/plugins/colordialog/dialogs/colordialog.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class devtools 
                    {
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string bg_js = "~/Scripts/ckeditor/plugins/devtools/lang/bg.js"; 
                                public const string cs_js = "~/Scripts/ckeditor/plugins/devtools/lang/cs.js"; 
                                public const string cy_js = "~/Scripts/ckeditor/plugins/devtools/lang/cy.js"; 
                                public const string da_js = "~/Scripts/ckeditor/plugins/devtools/lang/da.js"; 
                                public const string de_js = "~/Scripts/ckeditor/plugins/devtools/lang/de.js"; 
                                public const string el_js = "~/Scripts/ckeditor/plugins/devtools/lang/el.js"; 
                                public const string en_js = "~/Scripts/ckeditor/plugins/devtools/lang/en.js"; 
                                public const string eo_js = "~/Scripts/ckeditor/plugins/devtools/lang/eo.js"; 
                                public const string et_js = "~/Scripts/ckeditor/plugins/devtools/lang/et.js"; 
                                public const string fa_js = "~/Scripts/ckeditor/plugins/devtools/lang/fa.js"; 
                                public const string fi_js = "~/Scripts/ckeditor/plugins/devtools/lang/fi.js"; 
                                public const string fr_js = "~/Scripts/ckeditor/plugins/devtools/lang/fr.js"; 
                                public const string gu_js = "~/Scripts/ckeditor/plugins/devtools/lang/gu.js"; 
                                public const string he_js = "~/Scripts/ckeditor/plugins/devtools/lang/he.js"; 
                                public const string hr_js = "~/Scripts/ckeditor/plugins/devtools/lang/hr.js"; 
                                public const string it_js = "~/Scripts/ckeditor/plugins/devtools/lang/it.js"; 
                                public const string nb_js = "~/Scripts/ckeditor/plugins/devtools/lang/nb.js"; 
                                public const string nl_js = "~/Scripts/ckeditor/plugins/devtools/lang/nl.js"; 
                                public const string no_js = "~/Scripts/ckeditor/plugins/devtools/lang/no.js"; 
                                public const string pl_js = "~/Scripts/ckeditor/plugins/devtools/lang/pl.js"; 
                                public const string pt_br_js = "~/Scripts/ckeditor/plugins/devtools/lang/pt-br.js"; 
                                public const string tr_js = "~/Scripts/ckeditor/plugins/devtools/lang/tr.js"; 
                                public const string ug_js = "~/Scripts/ckeditor/plugins/devtools/lang/ug.js"; 
                                public const string uk_js = "~/Scripts/ckeditor/plugins/devtools/lang/uk.js"; 
                                public const string vi_js = "~/Scripts/ckeditor/plugins/devtools/lang/vi.js"; 
                                public const string zh_cn_js = "~/Scripts/ckeditor/plugins/devtools/lang/zh-cn.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/devtools/plugin.js"; 
                        }
                    }
                    public static partial class dialog 
                    {
                        public static class Assets
                        {
                            public const string dialogDefinition_js = "~/Scripts/ckeditor/plugins/dialog/dialogDefinition.js"; 
                        }
                    }
                    public static partial class div 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string div_js = "~/Scripts/ckeditor/plugins/div/dialogs/div.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class docprops 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string docprops_js = "~/Scripts/ckeditor/plugins/docprops/dialogs/docprops.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/docprops/plugin.js"; 
                        }
                    }
                    public static partial class find 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string find_js = "~/Scripts/ckeditor/plugins/find/dialogs/find.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class flash 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string flash_js = "~/Scripts/ckeditor/plugins/flash/dialogs/flash.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class forms 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string button_js = "~/Scripts/ckeditor/plugins/forms/dialogs/button.js"; 
                                public const string checkbox_js = "~/Scripts/ckeditor/plugins/forms/dialogs/checkbox.js"; 
                                public const string form_js = "~/Scripts/ckeditor/plugins/forms/dialogs/form.js"; 
                                public const string hiddenfield_js = "~/Scripts/ckeditor/plugins/forms/dialogs/hiddenfield.js"; 
                                public const string radio_js = "~/Scripts/ckeditor/plugins/forms/dialogs/radio.js"; 
                                public const string select_js = "~/Scripts/ckeditor/plugins/forms/dialogs/select.js"; 
                                public const string textarea_js = "~/Scripts/ckeditor/plugins/forms/dialogs/textarea.js"; 
                                public const string textfield_js = "~/Scripts/ckeditor/plugins/forms/dialogs/textfield.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class iframe 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string iframe_js = "~/Scripts/ckeditor/plugins/iframe/dialogs/iframe.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class iframedialog 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/iframedialog/plugin.js"; 
                        }
                    }
                    public static partial class image 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string image_js = "~/Scripts/ckeditor/plugins/image/dialogs/image.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class link 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string anchor_js = "~/Scripts/ckeditor/plugins/link/dialogs/anchor.js"; 
                                public const string link_js = "~/Scripts/ckeditor/plugins/link/dialogs/link.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class liststyle 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string liststyle_js = "~/Scripts/ckeditor/plugins/liststyle/dialogs/liststyle.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class pagebreak 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class pastefromword 
                    {
                        public static partial class filter 
                        {
                            public static class Assets
                            {
                                public const string default_js = "~/Scripts/ckeditor/plugins/pastefromword/filter/default.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class pastetext 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string pastetext_js = "~/Scripts/ckeditor/plugins/pastetext/dialogs/pastetext.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class placeholder 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string placeholder_js = "~/Scripts/ckeditor/plugins/placeholder/dialogs/placeholder.js"; 
                            }
                        }
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string bg_js = "~/Scripts/ckeditor/plugins/placeholder/lang/bg.js"; 
                                public const string cs_js = "~/Scripts/ckeditor/plugins/placeholder/lang/cs.js"; 
                                public const string cy_js = "~/Scripts/ckeditor/plugins/placeholder/lang/cy.js"; 
                                public const string da_js = "~/Scripts/ckeditor/plugins/placeholder/lang/da.js"; 
                                public const string de_js = "~/Scripts/ckeditor/plugins/placeholder/lang/de.js"; 
                                public const string el_js = "~/Scripts/ckeditor/plugins/placeholder/lang/el.js"; 
                                public const string en_js = "~/Scripts/ckeditor/plugins/placeholder/lang/en.js"; 
                                public const string eo_js = "~/Scripts/ckeditor/plugins/placeholder/lang/eo.js"; 
                                public const string et_js = "~/Scripts/ckeditor/plugins/placeholder/lang/et.js"; 
                                public const string fa_js = "~/Scripts/ckeditor/plugins/placeholder/lang/fa.js"; 
                                public const string fi_js = "~/Scripts/ckeditor/plugins/placeholder/lang/fi.js"; 
                                public const string fr_js = "~/Scripts/ckeditor/plugins/placeholder/lang/fr.js"; 
                                public const string he_js = "~/Scripts/ckeditor/plugins/placeholder/lang/he.js"; 
                                public const string hr_js = "~/Scripts/ckeditor/plugins/placeholder/lang/hr.js"; 
                                public const string it_js = "~/Scripts/ckeditor/plugins/placeholder/lang/it.js"; 
                                public const string nb_js = "~/Scripts/ckeditor/plugins/placeholder/lang/nb.js"; 
                                public const string nl_js = "~/Scripts/ckeditor/plugins/placeholder/lang/nl.js"; 
                                public const string no_js = "~/Scripts/ckeditor/plugins/placeholder/lang/no.js"; 
                                public const string pl_js = "~/Scripts/ckeditor/plugins/placeholder/lang/pl.js"; 
                                public const string pt_br_js = "~/Scripts/ckeditor/plugins/placeholder/lang/pt-br.js"; 
                                public const string tr_js = "~/Scripts/ckeditor/plugins/placeholder/lang/tr.js"; 
                                public const string ug_js = "~/Scripts/ckeditor/plugins/placeholder/lang/ug.js"; 
                                public const string uk_js = "~/Scripts/ckeditor/plugins/placeholder/lang/uk.js"; 
                                public const string vi_js = "~/Scripts/ckeditor/plugins/placeholder/lang/vi.js"; 
                                public const string zh_cn_js = "~/Scripts/ckeditor/plugins/placeholder/lang/zh-cn.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/placeholder/plugin.js"; 
                        }
                    }
                    public static partial class preview 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class scayt 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string options_js = "~/Scripts/ckeditor/plugins/scayt/dialogs/options.js"; 
                                public const string toolbar_css = "~/Scripts/ckeditor/plugins/scayt/dialogs/toolbar.css";
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class showblocks 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class smiley 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string smiley_js = "~/Scripts/ckeditor/plugins/smiley/dialogs/smiley.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class specialchar 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string specialchar_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/specialchar.js"; 
                            }
                        }
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string cs_js = "~/Scripts/ckeditor/plugins/specialchar/lang/cs.js"; 
                                public const string cy_js = "~/Scripts/ckeditor/plugins/specialchar/lang/cy.js"; 
                                public const string de_js = "~/Scripts/ckeditor/plugins/specialchar/lang/de.js"; 
                                public const string el_js = "~/Scripts/ckeditor/plugins/specialchar/lang/el.js"; 
                                public const string en_js = "~/Scripts/ckeditor/plugins/specialchar/lang/en.js"; 
                                public const string eo_js = "~/Scripts/ckeditor/plugins/specialchar/lang/eo.js"; 
                                public const string et_js = "~/Scripts/ckeditor/plugins/specialchar/lang/et.js"; 
                                public const string fa_js = "~/Scripts/ckeditor/plugins/specialchar/lang/fa.js"; 
                                public const string fi_js = "~/Scripts/ckeditor/plugins/specialchar/lang/fi.js"; 
                                public const string fr_js = "~/Scripts/ckeditor/plugins/specialchar/lang/fr.js"; 
                                public const string he_js = "~/Scripts/ckeditor/plugins/specialchar/lang/he.js"; 
                                public const string hr_js = "~/Scripts/ckeditor/plugins/specialchar/lang/hr.js"; 
                                public const string it_js = "~/Scripts/ckeditor/plugins/specialchar/lang/it.js"; 
                                public const string nb_js = "~/Scripts/ckeditor/plugins/specialchar/lang/nb.js"; 
                                public const string nl_js = "~/Scripts/ckeditor/plugins/specialchar/lang/nl.js"; 
                                public const string no_js = "~/Scripts/ckeditor/plugins/specialchar/lang/no.js"; 
                                public const string pt_br_js = "~/Scripts/ckeditor/plugins/specialchar/lang/pt-br.js"; 
                                public const string tr_js = "~/Scripts/ckeditor/plugins/specialchar/lang/tr.js"; 
                                public const string ug_js = "~/Scripts/ckeditor/plugins/specialchar/lang/ug.js"; 
                                public const string zh_cn_js = "~/Scripts/ckeditor/plugins/specialchar/lang/zh-cn.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class styles 
                    {
                        public static partial class styles_ 
                        {
                            public static class Assets
                            {
                                public const string default_js = "~/Scripts/ckeditor/plugins/styles/styles/default.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class stylesheetparser 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/stylesheetparser/plugin.js"; 
                        }
                    }
                    public static partial class table 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string table_js = "~/Scripts/ckeditor/plugins/table/dialogs/table.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class tableresize 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/tableresize/plugin.js"; 
                        }
                    }
                    public static partial class tabletools 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string tableCell_js = "~/Scripts/ckeditor/plugins/tabletools/dialogs/tableCell.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class templates 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string templates_js = "~/Scripts/ckeditor/plugins/templates/dialogs/templates.js"; 
                            }
                        }
                        public static partial class templates_ 
                        {
                            public static partial class images 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                                public const string default_js = "~/Scripts/ckeditor/plugins/templates/templates/default.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class uicolor 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string uicolor_js = "~/Scripts/ckeditor/plugins/uicolor/dialogs/uicolor.js"; 
                            }
                        }
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string bg_js = "~/Scripts/ckeditor/plugins/uicolor/lang/bg.js"; 
                                public const string cs_js = "~/Scripts/ckeditor/plugins/uicolor/lang/cs.js"; 
                                public const string cy_js = "~/Scripts/ckeditor/plugins/uicolor/lang/cy.js"; 
                                public const string da_js = "~/Scripts/ckeditor/plugins/uicolor/lang/da.js"; 
                                public const string de_js = "~/Scripts/ckeditor/plugins/uicolor/lang/de.js"; 
                                public const string el_js = "~/Scripts/ckeditor/plugins/uicolor/lang/el.js"; 
                                public const string en_js = "~/Scripts/ckeditor/plugins/uicolor/lang/en.js"; 
                                public const string eo_js = "~/Scripts/ckeditor/plugins/uicolor/lang/eo.js"; 
                                public const string et_js = "~/Scripts/ckeditor/plugins/uicolor/lang/et.js"; 
                                public const string fa_js = "~/Scripts/ckeditor/plugins/uicolor/lang/fa.js"; 
                                public const string fi_js = "~/Scripts/ckeditor/plugins/uicolor/lang/fi.js"; 
                                public const string fr_js = "~/Scripts/ckeditor/plugins/uicolor/lang/fr.js"; 
                                public const string he_js = "~/Scripts/ckeditor/plugins/uicolor/lang/he.js"; 
                                public const string hr_js = "~/Scripts/ckeditor/plugins/uicolor/lang/hr.js"; 
                                public const string it_js = "~/Scripts/ckeditor/plugins/uicolor/lang/it.js"; 
                                public const string mk_js = "~/Scripts/ckeditor/plugins/uicolor/lang/mk.js"; 
                                public const string nb_js = "~/Scripts/ckeditor/plugins/uicolor/lang/nb.js"; 
                                public const string nl_js = "~/Scripts/ckeditor/plugins/uicolor/lang/nl.js"; 
                                public const string no_js = "~/Scripts/ckeditor/plugins/uicolor/lang/no.js"; 
                                public const string pl_js = "~/Scripts/ckeditor/plugins/uicolor/lang/pl.js"; 
                                public const string pt_br_js = "~/Scripts/ckeditor/plugins/uicolor/lang/pt-br.js"; 
                                public const string tr_js = "~/Scripts/ckeditor/plugins/uicolor/lang/tr.js"; 
                                public const string ug_js = "~/Scripts/ckeditor/plugins/uicolor/lang/ug.js"; 
                                public const string uk_js = "~/Scripts/ckeditor/plugins/uicolor/lang/uk.js"; 
                                public const string vi_js = "~/Scripts/ckeditor/plugins/uicolor/lang/vi.js"; 
                                public const string zh_cn_js = "~/Scripts/ckeditor/plugins/uicolor/lang/zh-cn.js"; 
                            }
                        }
                        public static partial class yui 
                        {
                            public static partial class assets_ 
                            {
                                public static class Assets
                                {
                                    public const string yui_css = "~/Scripts/ckeditor/plugins/uicolor/yui/assets/yui.css";
                                }
                            }
                            public static class Assets
                            {
                                public const string yui_js = "~/Scripts/ckeditor/plugins/uicolor/yui/yui.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/uicolor/plugin.js"; 
                        }
                    }
                    public static partial class wsc 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string wsc_css = "~/Scripts/ckeditor/plugins/wsc/dialogs/wsc.css";
                                public const string wsc_js = "~/Scripts/ckeditor/plugins/wsc/dialogs/wsc.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class xml 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/xml/plugin.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class skins 
                {
                    public static partial class kama 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string dialog_css = "~/Scripts/ckeditor/skins/kama/dialog.css";
                            public const string editor_css = "~/Scripts/ckeditor/skins/kama/editor.css";
                            public const string skin_js = "~/Scripts/ckeditor/skins/kama/skin.js"; 
                            public const string templates_css = "~/Scripts/ckeditor/skins/kama/templates.css";
                        }
                    }
                    public static partial class office2003 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string dialog_css = "~/Scripts/ckeditor/skins/office2003/dialog.css";
                            public const string editor_css = "~/Scripts/ckeditor/skins/office2003/editor.css";
                            public const string skin_js = "~/Scripts/ckeditor/skins/office2003/skin.js"; 
                            public const string templates_css = "~/Scripts/ckeditor/skins/office2003/templates.css";
                        }
                    }
                    public static partial class v2 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string dialog_css = "~/Scripts/ckeditor/skins/v2/dialog.css";
                            public const string editor_css = "~/Scripts/ckeditor/skins/v2/editor.css";
                            public const string skin_js = "~/Scripts/ckeditor/skins/v2/skin.js"; 
                            public const string templates_css = "~/Scripts/ckeditor/skins/v2/templates.css";
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class themes 
                {
                    public static partial class @default 
                    {
                        public static class Assets
                        {
                            public const string theme_js = "~/Scripts/ckeditor/themes/default/theme.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string ckeditor_js = "~/Scripts/ckeditor/ckeditor.js"; 
                    public const string ckeditor_basic_js = "~/Scripts/ckeditor/ckeditor_basic.js"; 
                    public const string ckeditor_basic_source_js = "~/Scripts/ckeditor/ckeditor_basic_source.js"; 
                    public const string ckeditor_source_js = "~/Scripts/ckeditor/ckeditor_source.js"; 
                    public const string config_js = "~/Scripts/ckeditor/config.js"; 
                    public const string contents_css = "~/Scripts/ckeditor/contents.css";
                }
            }
            public static partial class Loom 
            {
                public static partial class fancybox 
                {
                    public static partial class helpers 
                    {
                        public static class Assets
                        {
                            public const string jquery_fancybox_mediae209_js = "~/Scripts/Loom/fancybox/helpers/jquery.fancybox-mediae209.js"; 
                            public const string jquery_fancybox_thumbs0ff5_css = "~/Scripts/Loom/fancybox/helpers/jquery.fancybox-thumbs0ff5.css";
                            public const string jquery_fancybox_thumbs0ff5_js = "~/Scripts/Loom/fancybox/helpers/jquery.fancybox-thumbs0ff5.js"; 
                        }
                    }
                    public static class Assets
                    {
                        public const string jquery_fancybox_css = "~/Scripts/Loom/fancybox/jquery.fancybox.css";
                    }
                }
                public static class Assets
                {
                    public const string bootstrap_min_js = "~/Scripts/Loom/bootstrap.min.js"; 
                    public const string canvas_js = "~/Scripts/Loom/canvas.js"; 
                    public const string jquery_easytabs_min_js = "~/Scripts/Loom/jquery.easytabs.min.js"; 
                    public const string jquery_fancybox_pack_js = "~/Scripts/Loom/jquery.fancybox.pack.js"; 
                    public const string jquery_fitvids_js = "~/Scripts/Loom/jquery.fitvids.js"; 
                    public const string jquery_isotope_min_js = "~/Scripts/Loom/jquery.isotope.min.js"; 
                    public const string jquery_min_js = "~/Scripts/Loom/jquery.min.js"; 
                    public const string jquery_slickforms_js = "~/Scripts/Loom/jquery.slickforms.js"; 
                    public const string jquery_sticky_js = "~/Scripts/Loom/jquery.sticky.js"; 
                    public const string jquery_themepunch_plugins_min_js = "~/Scripts/Loom/jquery.themepunch.plugins.min.js"; 
                    public const string jquery_themepunch_revolution_min_js = "~/Scripts/Loom/jquery.themepunch.revolution.min.js"; 
                    public const string owl_carousel_min_js = "~/Scripts/Loom/owl.carousel.min.js"; 
                    public const string prettify_js = "~/Scripts/Loom/prettify.js"; 
                    public const string retina_js = "~/Scripts/Loom/retina.js"; 
                    public const string scripts_js = "~/Scripts/Loom/scripts.js"; 
                    public const string twitter_bootstrap_hover_dropdown_min_js = "~/Scripts/Loom/twitter-bootstrap-hover-dropdown.min.js"; 
                }
            }
            public static partial class RoxyFileManager 
            {
                public static partial class asp_net 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class css 
                {
                    public static partial class images 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                        public const string jquery_ui_1_10_4_custom_css = "~/Scripts/RoxyFileManager/css/jquery-ui-1.10.4.custom.css";
                        public const string jquery_ui_1_10_4_custom_min_css = "~/Scripts/RoxyFileManager/css/jquery-ui-1.10.4.custom.min.css";
                        public const string main_css = "~/Scripts/RoxyFileManager/css/main.css";
                        public const string main_min_css = "~/Scripts/RoxyFileManager/css/main.min.css";
                    }
                }
                public static partial class images 
                {
                    public static partial class filetypes 
                    {
                        public static partial class big 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class js 
                {
                    public static class Assets
                    {
                        public const string custom_js = "~/Scripts/RoxyFileManager/js/custom.js"; 
                        public const string directory_js = "~/Scripts/RoxyFileManager/js/directory.js"; 
                        public const string file_js = "~/Scripts/RoxyFileManager/js/file.js"; 
                        public const string filetypes_js = "~/Scripts/RoxyFileManager/js/filetypes.js"; 
                        public const string jquery_1_10_2_min_js = "~/Scripts/RoxyFileManager/js/jquery-1.10.2.min.js"; 
                        public const string jquery_1_11_1_min_js = "~/Scripts/RoxyFileManager/js/jquery-1.11.1.min.js"; 
                        public const string jquery_2_1_1_min_js = "~/Scripts/RoxyFileManager/js/jquery-2.1.1.min.js"; 
                        public const string jquery_dateFormat_min_js = "~/Scripts/RoxyFileManager/js/jquery-dateFormat.min.js"; 
                        public const string jquery_ui_1_10_4_custom_min_js = "~/Scripts/RoxyFileManager/js/jquery-ui-1.10.4.custom.min.js"; 
                        public const string main_js = "~/Scripts/RoxyFileManager/js/main.js"; 
                        public const string main_min_js = "~/Scripts/RoxyFileManager/js/main.min.js"; 
                        public const string mini_main_js = "~/Scripts/RoxyFileManager/js/mini-main.js"; 
                        public const string tiny_mce_popup_js = "~/Scripts/RoxyFileManager/js/tiny_mce_popup.js"; 
                        public const string utils_js = "~/Scripts/RoxyFileManager/js/utils.js"; 
                    }
                }
                public static partial class lang 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public const string _references_js = "~/Scripts/_references.js"; 
                public const string bootstrap_rtl_js = "~/Scripts/bootstrap-rtl.js"; 
                public const string bootstrap_rtl_min_js = "~/Scripts/bootstrap-rtl.min.js"; 
                public const string bootstrap_js = "~/Scripts/bootstrap.js"; 
                public const string bootstrap_min_js = "~/Scripts/bootstrap.min.js"; 
                public const string jquery_3_1_0_intellisense_js = "~/Scripts/jquery-3.1.0.intellisense.js"; 
                public const string jquery_3_1_0_js = "~/Scripts/jquery-3.1.0.js"; 
                public const string jquery_3_1_0_min_js = "~/Scripts/jquery-3.1.0.min.js"; 
                public const string jquery_3_1_0_slim_js = "~/Scripts/jquery-3.1.0.slim.js"; 
                public const string jquery_3_1_0_slim_min_js = "~/Scripts/jquery-3.1.0.slim.min.js"; 
                public const string jquery_migrate_3_0_0_js = "~/Scripts/jquery-migrate-3.0.0.js"; 
                public const string jquery_migrate_3_0_0_min_js = "~/Scripts/jquery-migrate-3.0.0.min.js"; 
                public const string jquery_ui_1_12_0_js = "~/Scripts/jquery-ui-1.12.0.js"; 
                public const string jquery_ui_1_12_0_min_js = "~/Scripts/jquery-ui-1.12.0.min.js"; 
                public const string jquery_unobtrusive_ajax_js = "~/Scripts/jquery.unobtrusive-ajax.js"; 
                public const string jquery_unobtrusive_ajax_min_js = "~/Scripts/jquery.unobtrusive-ajax.min.js"; 
                public const string jquery_validate_js = "~/Scripts/jquery.validate.js"; 
                public const string jquery_validate_min_js = "~/Scripts/jquery.validate.min.js"; 
                public const string jquery_validate_unobtrusive_js = "~/Scripts/jquery.validate.unobtrusive.js"; 
                public const string jquery_validate_unobtrusive_min_js = "~/Scripts/jquery.validate.unobtrusive.min.js"; 
                public const string modernizr_2_8_3_js = "~/Scripts/modernizr-2.8.3.js"; 
                public const string respond_js = "~/Scripts/respond.js"; 
                public const string respond_matchmedia_addListener_js = "~/Scripts/respond.matchmedia.addListener.js"; 
                public const string respond_matchmedia_addListener_min_js = "~/Scripts/respond.matchmedia.addListener.min.js"; 
                public const string respond_min_js = "~/Scripts/respond.min.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class Admin 
            {
                public static partial class icons 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class images 
                {
                    public static partial class colorpicker 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class flags 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class forms 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class @interface 
                    {
                        public static partial class tables 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string bootstrap_min_css = "~/Content/Admin/bootstrap.min.css";
                    public const string font_awesome_min_css = "~/Content/Admin/font-awesome.min.css";
                    public const string icons_css = "~/Content/Admin/icons.css";
                    public const string londinium_theme_css = "~/Content/Admin/londinium-theme.css";
                    public const string PagedList_css = "~/Content/Admin/PagedList.css";
                    public const string PersianDatePicker_css = "~/Content/Admin/PersianDatePicker.css";
                    public const string PersianDatePicker_min_css = "~/Content/Admin/PersianDatePicker.min.css";
                    public const string styles_css = "~/Content/Admin/styles.css";
                }
            }
            public static partial class error 
            {
                public static partial class img 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string fonts_css = "~/Content/error/fonts.css";
                    public const string normalize_css = "~/Content/error/normalize.css";
                    public const string responsive_css = "~/Content/error/responsive.css";
                    public const string style_css = "~/Content/error/style.css";
                }
            }
            public static partial class Loom 
            {
                public static partial class images 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string fontello_css = "~/Content/Loom/fontello.css";
                    public const string green_css = "~/Content/Loom/green.css";
                    public const string owl_carousel_css = "~/Content/Loom/owl.carousel.css";
                    public const string picons_css = "~/Content/Loom/picons.css";
                    public const string prettify_css = "~/Content/Loom/prettify.css";
                    public const string settings_css = "~/Content/Loom/settings.css";
                    public const string socialcss_css = "~/Content/Loom/socialcss.css";
                    public const string style_css = "~/Content/Loom/style.css";
                }
            }
            public static partial class themes 
            {
                public static partial class @base 
                {
                    public static partial class images 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                        public const string accordion_css = "~/Content/themes/base/accordion.css";
                        public const string all_css = "~/Content/themes/base/all.css";
                        public const string autocomplete_css = "~/Content/themes/base/autocomplete.css";
                        public const string base_css = "~/Content/themes/base/base.css";
                        public const string button_css = "~/Content/themes/base/button.css";
                        public const string core_css = "~/Content/themes/base/core.css";
                        public const string datepicker_css = "~/Content/themes/base/datepicker.css";
                        public const string dialog_css = "~/Content/themes/base/dialog.css";
                        public const string draggable_css = "~/Content/themes/base/draggable.css";
                        public const string jquery_ui_css = "~/Content/themes/base/jquery-ui.css";
                        public const string jquery_ui_min_css = "~/Content/themes/base/jquery-ui.min.css";
                        public const string menu_css = "~/Content/themes/base/menu.css";
                        public const string progressbar_css = "~/Content/themes/base/progressbar.css";
                        public const string resizable_css = "~/Content/themes/base/resizable.css";
                        public const string selectable_css = "~/Content/themes/base/selectable.css";
                        public const string selectmenu_css = "~/Content/themes/base/selectmenu.css";
                        public const string slider_css = "~/Content/themes/base/slider.css";
                        public const string sortable_css = "~/Content/themes/base/sortable.css";
                        public const string spinner_css = "~/Content/themes/base/spinner.css";
                        public const string tabs_css = "~/Content/themes/base/tabs.css";
                        public const string theme_css = "~/Content/themes/base/theme.css";
                        public const string tooltip_css = "~/Content/themes/base/tooltip.css";
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public const string bootstrap_rtl_css = "~/Content/bootstrap-rtl.css";
                public const string bootstrap_rtl_min_css = "~/Content/bootstrap-rtl.min.css";
                public const string bootstrap_theme_rtl_css = "~/Content/bootstrap-theme-rtl.css";
                public const string bootstrap_theme_rtl_min_css = "~/Content/bootstrap-theme-rtl.min.css";
                public const string bootstrap_theme_css = "~/Content/bootstrap-theme.css";
                public const string bootstrap_theme_min_css = "~/Content/bootstrap-theme.min.css";
                public const string bootstrap_css = "~/Content/bootstrap.css";
                public const string bootstrap_min_css = "~/Content/bootstrap.min.css";
                public const string font_awesome_css = "~/Content/font-awesome.css";
                public const string font_awesome_min_css = "~/Content/font-awesome.min.css";
                public const string PagedList_css = "~/Content/PagedList.css";
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


